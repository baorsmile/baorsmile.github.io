[{"title":"Hexo Sum","date":"2017-07-22T14:34:35.000Z","path":"2017/07/22/Hexo-Sum/","text":"Hexo Sum ： Hexo主题，博文插入图片，添加评论，添加浏览数，加密博文 博文插入图片 修改_config.yml里面的post_asset_folder:true 在根目录下执行npm install hexo-asset-image --save安装插件 hexo n &quot;new&quot;生成一个新的博文，在source/_posts/new会生一个new文件夹,用来存放图片 ![你想输入的替代文字](new/xxx.jpg) 添加搜狐畅言评论 举例我用的主题是smackdown在themes/smackdown/layout/_partial/article.ejs里面最后添加如下代码 1234567891011121314151617181920&lt;% if (!index &amp;&amp; post.comments)&#123; %&gt;&lt;section id=\"comments\"&gt;&lt;!--高速版，加载速度快，使用前需测试页面的兼容性--&gt; &lt;div id=\"SOHUCS\" sid=\"&lt;%= page.title %&gt;\" style=\"padding: 0px 30px 0px 46px;\"&gt;&lt;/div&gt; &lt;script&gt; (function()&#123; var appid = '你的 AppID', conf = '你的 Appkey'; var doc = document, s = doc.createElement('script'), h = doc.getElementsByTagName('head')[0] || doc.head || doc.documentElement; s.type = 'text/javascript'; s.charset = 'utf-8'; s.src = 'http://assets.changyan.sohu.com/upload/changyan.js?conf='+ conf +'&amp;appid=' + appid; h.insertBefore(s,h.firstChild); window.SCS_NO_IFRAME = true; &#125;)() &lt;/script&gt;&lt;/section&gt;&lt;% &#125; %&gt; 畅言目前需要自己的域名网站备案才可以使用，具体的创建可以按照这篇博文实现Github pages + Hexo 博客 yilia 主题使用畅言评论系统 添加阅读量 可以参考为hexo-theme-smackdown主题添加阅读数 文章加密 可参考：hexo-blog-encrypt 这个插件目前只适合Next主题","tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://www.tiandabao.com/tags/Hexo/"}]},{"title":"实用技巧","date":"2017-07-17T09:30:31.000Z","path":"2017/07/17/知识总结/","text":"实用技巧 ： 主要是一些关于实用技巧 Git忽略文件 参考：这篇博文","tags":[]},{"title":"iOS关键知识点整理","date":"2017-07-17T02:32:44.000Z","path":"2017/07/17/iOS关键知识点整理/","text":"iOS关键知识点整理 ： 主要是关于iOS开发关键知识点整理 Coy/MutableCopy(深浅拷贝) 只有对不可变对象进行copy操作是指针复制（浅复制），其它情况都是内容复制（深复制）！ 这句话是说，只要是类似于NSArray/NSString这类不可变兑现的copy，都是指针复制，而对带有Mutable前缀的例如NSMutableArray这类的不管是copy还是MutableCopy都是深拷贝，要重新在内存开辟空间* obejct = nil 真的像你想像的一样吗整理copy时发现一个问题，比如：12345678910111213141516171819NSMutableArray *ones = [[NSMutableArray alloc] initWithObjects:@\"1\", nil];NSMutableArray *twos = ones;NSLog(@\"one: %@, twos: %@\", ones, twos);NSLog(@\"&amp;one:%x, &amp;tows:%x\", &amp;ones, &amp;twos);log(lldb) p &amp;ones(NSMutableArray **) $0 = 0x00007fff580809c8(lldb) p &amp;twos(NSMutableArray **) $1 = 0x00007fff580809c0(lldb) po ones&lt;__NSArrayM 0x60800004a590&gt;(1)(lldb) po twos&lt;__NSArrayM 0x60800004a590&gt;(1) 这里面的这个twos = ones是copy呢还是strong，strong真像我们所说的只是简单的赋值吗？看样子这种简单的不复制也会产生一个新的指针地址 我又做了一个例子来验证这一理论 1234567891011121314151617181920212223242526272829NextViewController *next = [[NextViewController alloc] init];UIView *view = [UIView new];NSLog(@\"view %@, &amp;view %x\", view, &amp;view);next.nameView = view;[self.navigationController pushViewController:next animated:YES];log(lldb) po view&lt;UIView: 0x7fb1afd07240; frame = (0 0; 0 0); layer = &lt;CALayer: 0x61800023a860&gt;&gt;(lldb) po &amp;view0x00007fff5d3f2608在NextViewCotroller.h@interface NextViewController : UIViewController@property (nonatomic, strong) UIView *nameView;@end在NextViewCotroller.viewDidLoad- (void)viewDidLoad &#123; [super viewDidLoad]; NSLog(@\"view %@, &amp;view %x\", _nameView, &amp;_nameView);&#125;log(lldb) po _nameView&lt;UIView: 0x7fb1afd07240; frame = (0 0; 0 0); layer = &lt;CALayer: 0x61800023a860&gt;&gt;(lldb) po &amp;_nameView0x00007fb1afd03bb8 对比前后两次赋值的指针的地址变了，但是所指向的内存地址没有变，这也说明strong不是简单的赋值 下来我们传一个数据进来试试12345678910111213141516171819202122232425262728293031NextViewController *next = [[NextViewController alloc] init];NSArray *ones = @[@\"name\"];NSLog(@\"ones %@, &amp;ones %x\", ones, &amp;ones);next.names = ones;[self.navigationController pushViewController:next animated:YES];log(lldb) po ones&lt;__NSSingleObjectArrayI 0x6180000100a0&gt;(name)(lldb) po &amp;ones0x00007fff5d7aa5f8在NextViewCotroller.h@interface NextViewController : UIViewController@property (nonatomic, strong) NSArray *names;@end在NextViewCotroller.viewDidLoad- (void)viewDidLoad &#123; [super viewDidLoad]; NSLog(@\"view %@, &amp;view %x\", _names, &amp;_names);&#125;log(lldb) po _names&lt;__NSSingleObjectArrayI 0x6180000100a0&gt;(name)(lldb) po &amp;_names0x00007fec1a510dd0 发现还是一样的， 下来我们把strong 改成copy试试会发生什么 12345678910111213(lldb) po ones&lt;__NSSingleObjectArrayI 0x618000019330&gt;(name)(lldb) po &amp;ones0x00007fff51e3d5f8(lldb) po _names&lt;__NSSingleObjectArrayI 0x618000019330&gt;(name)(lldb) po &amp;_names0x00007f92c710b958 最终发现也是一样的指针创建新的，指针指向的内存地址没变苹果的做法是：我即使把一个初始化的好的变量赋值给其他变量时，都进行了一次指针拷贝，也就是我们所谓的浅拷贝，这样防止，一个指针值成nil，这个指针原来指向的内存还有其他指针指向，这部分内存也不会马上被释放掉，保证了内存数据安全。copy在赋值上不同于strong，我们用的最多的就是给array copy，因为copy后的数组都是不可操作的，这样保证了我给一个对象传入的数据不被修改，如果想修改就出入一个NSMutable，并把属性改成strong，这样内外都可以修改。 对于内存的处理，有一次我是在用realm里面遇到过一个bug 当初是我把数据库里面的数据全部取出来，然后放到数组里面，然后把数据库里面这些数据删掉，然而我数组里的数据也变成了Invalid类型， 这不得不说realm关联的强大，realm应该是对从数据库取出来的数据进行了标记，当被释放掉后，我自己数组里面的存的其实就是一组野指针，没有任何指向。 UIScrollView或者其他Offset偏移量 位移转化成缩放比例 1234567// offset 位移偏量// scaleMargin 从小变大、从大变小偏量（不是比例） MAX(startSize, finalSize) - finalSize或者 MAX(startSize, finalSize) - startSize// finalSize 最终size// startSize 最大size MAX(startSize, finalSize)// actualOffset 实际真实运行大小CGFloat scale = (offset * (scaleMargin/actualOffset) + finalSize)/startSize; KVO坑 可以对同一个属性就行多次添加，在监听回掉里里面会接受到多个添加的kepath, 也就是说添加了几个回调几个；在rmove时候也是，添加了几个就remvoe几个，不管是否是同一个属性 如果你添加一个属性，但是你remove了两次，就会crash，这里强调一点，如果你对一个属性添加了多次，你就要remove多次，这是不会crash的 防止remove掉父类的你需要在add时候添加一个上下文context，来进行标记是否是自己添加，再在remove的时候remove掉自己的就行了 实现方式 当你观察一个对象时，一个新的类会动态被创建。这个类继承自该对象的原本的类，并重写了被观察属性的 setter 方法。自然，重写的 setter 方法会负责在调用原 setter 方法之前和之后，通知所有观察对象值的更改。最后把这个对象的 isa 指针 ( isa 指针告诉 Runtime 系统这个对象的类是什么 ) 指向这个新创建的子类，对象就神奇的变成了新创建的子类的实例。 GCGdispatch_apply，循环多少次应用场景 要处理大数据时候使用apply会比多开线程来的好 如果我们从服务器获取一个数组的数据，那么我们可以使用该方法从而快速的批量字典转模型。12345678910111213NSArray *dictArray = nil;//存放从服务器返回的字典数组 dispatch_queue_t queue = dispatch_queue_create(\"queue\", DISPATCH_QUEUE_CONCURRENT); dispatch_async(queue, ^&#123; dispatch_apply(dictArray.count, queue, ^(size_t index)&#123; //字典转模型 &#125;); dispatch_async(dispatch_get_main_queue(), ^&#123; NSLog(@\"主线程更新\"); &#125;); &#125;); 作者：lltree转自：http://www.jianshu.com/p/3b12bb90bb15 dispatch_barrier_async/dispatch_barrier_sync，屏障 DISPATCH_QUEUE_CONCURRENT 队列中才起作用,在全局并发队列 dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0) 中无效,也就是说起不到屏障的作用 放到子线程里面做dispatch_barrier_sync，发现不起作用，也不会打印block里面的内容，但是用dispatch_barrier_async是可以的 12345678910111213141516171819202122232425262728293031323334dispatch_queue_t concurrent_queue = dispatch_queue_create(\"concurrent_queue\", DISPATCH_QUEUE_CONCURRENT);dispatch_async(concurrent_queue, ^()&#123; NSLog(@\"task-1--%@\",[NSThread currentThread]);&#125;);dispatch_async(concurrent_queue, ^()&#123; NSLog(@\"task-2--%@\",[NSThread currentThread]);&#125;);dispatch_sync(concurrent_queue, ^()&#123; NSLog(@\"task-3--%@\",[NSThread currentThread]); dispatch_async(concurrent_queue, ^()&#123; NSLog(@\"task-5--%@\",[NSThread currentThread]); &#125;); dispatch_async(concurrent_queue, ^()&#123; NSLog(@\"task-6--%@\",[NSThread currentThread]); &#125;); dispatch_barrier_async(concurrent_queue, ^()&#123; NSLog(@\"dispatch_barrier_async--%@\",[NSThread currentThread]); &#125;); dispatch_async(concurrent_queue, ^()&#123; NSLog(@\"task-4--%@\",[NSThread currentThread]); &#125;);&#125;);2017-07-17 19:08:17.998 BackBlock[32724:28690837] task-3--&lt;NSThread: 0x618000066040&gt;&#123;number = 1, name = main&#125;2017-07-17 19:08:17.998 BackBlock[32724:28691040] task-2--&lt;NSThread: 0x61000006bbc0&gt;&#123;number = 4, name = (null)&#125;2017-07-17 19:08:17.998 BackBlock[32724:28691038] task-1--&lt;NSThread: 0x618000068980&gt;&#123;number = 3, name = (null)&#125;2017-07-17 19:08:17.999 BackBlock[32724:28691042] task-5--&lt;NSThread: 0x6180000690c0&gt;&#123;number = 5, name = (null)&#125;2017-07-17 19:08:17.999 BackBlock[32724:28691057] task-6--&lt;NSThread: 0x60800006c340&gt;&#123;number = 6, name = (null)&#125;2017-07-17 19:08:17.999 BackBlock[32724:28691057] dispatch_barrier_async--&lt;NSThread: 0x60800006c340&gt;&#123;number = 6, name = (null)&#125;2017-07-17 19:08:17.999 BackBlock[32724:28691057] task-4--&lt;NSThread: 0x60800006c340&gt;&#123;number = 6, name = (null)&#125;","tags":[{"name":"iOS","slug":"iOS","permalink":"http://www.tiandabao.com/tags/iOS/"}]},{"title":"Swift学习笔记","date":"2017-07-13T08:51:12.000Z","path":"2017/07/13/Swift学习笔记/","text":"Swift学习笔记 ： 主要是关于Swift学习笔记 [open/public]和[private/fileprivate]public1.使用public修饰的类,属性或方法,可以被任何类访问2.但在其他的module中不可以被override和继承,而在本module可以 module内和module外的区别 ： module内是指不需要使用import引用文件，就可以创建对象，表示module内，而module外是指需要使用import文件才能创建对象才能使用 这里有个很好的module例子，比如说你项目中用到了pods,你要继承里面一个类，这时候public和open就起到作用，但是如果你在工程里面，通俗的说就是基本上和open没有区别 open1.可以被任何人使用2.也可以被override和继承,这是和public的区别 private只在自己的类里面可以使用，在类外不能用，就是说,不管另外一个类是否在这个文件里，都不能访问，包括自己的extension里面 fileprivate顾名思义，只要在这个文件里面，所有的类、extension都可以访问，比如说类A和B都在同一个swift文件里面，A里面初始化B，调用B里面属性方法都可以 String格式化1，下面是一个浮点类型的数字转成String字符串的例子 12var f = 123.32342342var s:String = \"\\(f)\" //123.32342342 2，如果要保留两位小数12var f = 123.32342342var s = String(format: \"%.2f\", f) //123.32 3，转成十六进制格式字符串12let i = 255let s:String = String(format: \"%x\", i) //ff 4，不足六位前面补012let i = 255let s:String = String(format: \"%06x\", i) //0000ff Array和DictionaryArray 遍历 123456789let count: Int = 10for i in 0..&lt; count &#123; // 0 - 9&#125;for i in 0...count &#123; // 0 - 10&#125; Dictionary 遍历 12345678910111213let dict: Dictionary = [\"key\":\"value\"]for (key, value) in dict &#123;&#125;dict.forEach &#123; (key, value) in&#125;(dict as NSDictionary).enumerateKeysAndObjects(&#123; (key, value, stop) in&#125;) Keyboard12345678910111213141516171819202122232425func willShow(_ center: Notification) &#123; self.handleKeyboard(center)&#125;func willHide(_ center: Notification) &#123; self.handleKeyboard(center)&#125;func handleKeyboard(_ center: Notification) &#123; if let nInfo = (center as NSNotification).userInfo, let value = nInfo[UIKeyboardFrameEndUserInfoKey] as? NSValue &#123; let frame = value.cgRectValue let duration: CGFloat = nInfo[UIKeyboardAnimationDurationUserInfoKey] as! CGFloat let keyboardMoveY: CGFloat = frame.origin.y - kMainScreen_Height() UIView.animate(withDuration: TimeInterval(duration), animations: &#123; self.transform = CGAffineTransform(translationX: 0, y: keyboardMoveY); &#125;) &#125;&#125;","tags":[{"name":"iOS","slug":"iOS","permalink":"http://www.tiandabao.com/tags/iOS/"}]},{"title":"MyBaby","date":"2017-03-02T01:30:41.000Z","path":"2017/03/02/MyBaby/","text":"密码!!!!你懂的! ","tags":[]},{"title":"常用的iOS开发库","date":"2017-02-06T06:45:32.000Z","path":"2017/02/06/常用的iOS开发库/","text":"常用的iOS开发库 ： 一些自己发现的实用的第三方库 持续更新ing33 个 2017 年必须了解的 iOS 开源库缓存 EGOCache 滚动视图 CRPageViewController 支付 RMStore","tags":[{"name":"iOS","slug":"iOS","permalink":"http://www.tiandabao.com/tags/iOS/"}]},{"title":"多个git账号的配置","date":"2017-01-23T03:17:08.000Z","path":"2017/01/23/多个git账号的配置/","text":"多个git账号的配置 ： 多个git帐号的处理，我们有时候需要配置很多git的ssh，那我们要如何实现呢？ 多个git账号的配置有时候我们需要在同一台Mac电脑下上使用多个git账号，为了避免冲突，我们需要配置~/.ssh/config文件，作为程序员会有多个代码管理的库，现在用SVN比较少了，Git成为主流，但是在电脑下如何同时保存多个ssh账号呢，自己总结了一下步骤：注意：整个修改过程按照github的ssh-key为范例 1、用ssh-keygen命令生成一组新的id_rsa_github和id_rsa_github.pub123cd ~/.sshssh-keygen -t rsa -C \"new email\" 当我们在终端输入完上面的命令，回车后会提示：1Enter file in which to save the key (/Users/dabao/.ssh/id_rsa): 现在就是生成一个新的pub，在: 后输入你想生成文件的新名字，例如github的：id_rsa_github,名字可以随便起，然后回车。1Enter passphrase (empty for no passphrase): 我感觉整个秘密可以不用输入，我一般就是github的密码，按回车，确认密码，然后就生成了新的key. 这个时候会发现，在~/.ssh文件夹下会多出一个id_rsa_github和id_rsa_github.pub的文件 2、打开config文件，如果没有就生成一个! 这里可以修改Host，Host只是一个标记而已，比如说我有两个github账号，这时候我就要生成不同的key，用Host起一个别名用来区分就好了 12345678910Host git-oschina HostName git.oschina.net User xxx(名字随便写) PreferredAuthentications publickey IdentityFile ~/.ssh/id_rsa_oschinaHost git-github HostName github.com User xxx(名字随便写) PreferredAuthentications publickey IdentityFile ~/.ssh/id_rsa_github 3、然后我们要把ssh添加到git里面1ssh-add ~/.ssh/id_rsa_github 4、然后测试一下是否OK12ssh -T git@github.comHi xxx! You've successfully authenticated,but GitHub does not provide shell access. 5、完成之后需要设置config 在自己git项目下，终端运行 1git config --list 查看自己config配置，路径在~/.gitconfig里，可以用文本打开 这个地方强调一下 12git config --global user.name \"xxx\"git config --global user.email \"xxx@qq.com\" 这个如果你想全局都是这个你可以选择gloabal，反正我的~/.gitconfig里面是我公司的配置，可一个人选择配置 又或者在自己项目里进行单独配置 12git config user.name \"xxx\"git config user.email \"xxx@qq.com\" 这个设置会显示在你的提交信息里面，在自己项目的.git目录下，有个名为config的文件，如果找不到可以在终端输入l -list 6、如果遇到如图下面这种情况 就把known_hosts里面相应的地址删掉，在执行ssh -T重新请求就好了","tags":[{"name":"Git","slug":"Git","permalink":"http://www.tiandabao.com/tags/Git/"}]},{"title":"新年新的开端","date":"2017-01-22T03:37:14.000Z","path":"2017/01/22/新年新的开端/","text":"新年新的开端 ： 2017年开始了，新年新气象。加油！ 2016这一年，没有任何大的提升，后来转岗新项目，有了部分多余的时间，自己学习算法，把最底层的算法过一遍，二叉树，排序这些考的最多的；Ruby语言也按照系统的学习了一边，最基本的语法，实现一个博客的，都可以了，但是由于项目后期忙，基本上就放下了。这一年，书没看完三本，两个0.5，不管技术类型还是其他，基本上没看完；对于新语言ruby，只能说半知半解，感觉还差好多，几本播客是可以完成，但是内部结构原理，还是不是很清楚，想继续深入，原本是想用ruby写脚本的，但是思路和思想还是面向对象编程，对脚本语言不熟悉、了解。这一年，自己结了婚，有了宝宝，有了自己家庭，自己也越有责任感！2017这一年，新的一年，目标不大也不能小，要对自己负责，对家庭负责！ 读书，这个还得继续，读万卷书行万里路，就这一个道理，一本书，既然开始读了，就持之以恒的读完！ 新的专业知识，这个问题其实挺严峻的，随着开发的进行，各个新技术涌现，学的东西太多了，自己要抓住自己感兴趣的东西，去了解学习。 未来 新技术瞻望，新技术学习，持之以恒 对于iOS开发，Swift学习；对于其他语言Ruby持续深入","tags":[{"name":"Sentiment","slug":"Sentiment","permalink":"http://www.tiandabao.com/tags/Sentiment/"}]},{"title":"UITextView心得","date":"2016-07-02T15:26:43.000Z","path":"2016/07/02/UITextView心得/","text":"UITextView心得 ： 主要是关于UITextView一些测试和自己的一些见解，不喜勿喷哦！ UITextView最近开发输入框这个鬼东西，输入自动调整高度，网上也有各种添加placeholder的，感觉都不太好用，自己着手去搞一下，最近很困扰我一个问题，由于要添加placeholder有时候和光标对不齐，最后用reveal查看了一下，如下1234567891011121314// font = 0 h = 16 selectionh = 1.5// font = 0.5 h = 17 selectionh = 2.09668// font = 1 h = 18 selectionh = 2.69336 // (width = 6, height = 1.193359375)// font = 1.5 h = 18 selectionh = 3.29004// font = 2 h = 19 selectionh = 3.88672 2.386719// font = 3 h = 20 selectionh = 5.08008// font = 4 h = 21 selectionh = 6.27344// font = 5 h = 22 selectionh = 7.4668// font = 10 h = 28 selectionh = 13.4336 contentOffset = &#123; 0, 3 &#125; 25// font = 11 h = 30 selectionh = 14.627// font = 100 h = 136 selectionh = 120.836 contentOffset = &#123; 0, 110.5 &#125; 25.5// font = 1000 h = 1210 selectionh = 1194.86 contentOffset = &#123; 0, 1184.5 &#125; 25.5// font = 10000 h = 11950 selectionh = 11935.1 contentOffset = &#123; 0, 11924.5 &#125; 25.5// font = 100000 h = 119352 selectionh = 119337 contentOffset = &#123; 0, 119327 &#125; 25.5 这是测试的一些font，就想知道到底textView是怎么计算contenSize的，一直从光标高度算起，最终没算出来，但是搞定了光标的高度 min：1.5，光标height=text.size.height+1.5 光标的point = {4, 7}, 这是一开始没有文字输入的时候，如果设置placeholderLabel的坐标可以通过point来确定 实际上contentSize的高度是这样来的contentSizeHeight = round(text.size.height + 16)（四舍五入）这样能解释为什么当font=0时候，初始化高度为16了，其实和光标没有任何关系。","tags":[{"name":"iOS","slug":"iOS","permalink":"http://www.tiandabao.com/tags/iOS/"}]},{"title":"幻想该怎样处理","date":"2016-02-29T03:08:34.000Z","path":"2016/02/29/幻想该怎样处理/","text":"幻想该怎样处理 ： 摘自一篇佛经，幻想人人都有，你呢??? 打坐时经常看到”幻想”该怎样处理 抄一篇小文，感觉挺有深意。 问：师父，我在打坐的时候经常会看到一些“幻像”，有时候会很害怕，不知道该怎么处理，希望师父给指点迷津，阿弥陀佛。 慧广法师：唯一的方法就是不执着。要知道，我们亲身经历的一切，都会慢慢地消失，慢慢被遗忘。何况是静坐中出现的幻觉？世界就是这样，你抓不住任何东西，所以，不要执著它。 大家想一想，你们此刻觉得我说的话真好，有些人会感动，有些人会出现一种感悟，但这些东西明天还在不在，后天还在不在，说不清。什么意思呢？任何情绪，任何心情，任何经历，都会很快过去，不要跟着它，不要执著它，不要想抓住它。痛苦、幸福、仇恨都一样，只有傻瓜才想抓住它，智者知道它只是水里的月亮。 什么是智者？就是明白我讲的这个真理，并且照着去做的人。 什么是愚者？就是不明白这个道理，总被一些事情和情绪所控的人。比如说，三天前女朋友说了一句话，你到现在都气得要死；五天前朋友说了一句话，你到现在也气得要死；一年前某人说了一句话，你到今天还气得要死。结果你就气死了，气不死也气病了。那么，你就是愚者。被一些失去的东西压得喘不过气的时候，你也是愚者。明白一切都会过去，抓紧时间做事，喝茶的喝茶，演讲的演讲，聊天的聊天，吃饭的吃饭，做而无做，无做而做，就是智者。 愚智之间，只有一线之差，执著就是愚，放下就是智。就这么简单，不要老是被过去的，或者不可能抓住的东西，把你的生命捆死，你要是真把它当成“幻像”的话，就不会有疑惑了。 本文来源：网易佛学 作者：中国佛经网","tags":[{"name":"Sentiment","slug":"Sentiment","permalink":"http://www.tiandabao.com/tags/Sentiment/"}]},{"title":"2016年计划","date":"2016-02-19T03:14:46.000Z","path":"2016/02/19/2016年计划/","text":"2016年计划 ： 2016年开始了，新年新气象。加油！ 新年新气象 自己规划总结2015年这一年，感觉浑浑噩噩，本来想多学一门语言，但后来还是没有进行到，那个谁说过，完事开头难我感觉能把一件事坚持下来更难，三分钟热度这事长有，贵在坚持，现在看来坚持一件事得多难。 新的征程开始了，除了想给自己买个kindle，但是还在由于，买kindle干嘛，说对了,第一件事就是看书，每月必须看一本书。规定一年12个月每月一本。每本都要写总结。 除了看书，还要把想学的语音过一遍，比如ruby and rails写一个我的首页 其实吧任务还是挺重的嗯。。。。。。。。 新的征程 刚开始读完了吴军的浪潮之巅第二版，整本书分为两版，第一版主要介绍各个美国公司的兴衰史；第二版主要介绍的变革，主要以互联网公司Google、Facebook等，以及一些风投公司的兴衰，公司上市等。 读后感： 每家成功的公司，都有着自己独立的位置， Google杀鸡焉用牛刀，如果毕业生能完成的，研究生也能完成，那就用研究生，也就是说研究生肯定比毕业生做的好； 一直像前看，不在旁边的风景，只要赶超对手一大截就是胜利，Google和微软 科技公司和互联网公司。","tags":[{"name":"Sentiment","slug":"Sentiment","permalink":"http://www.tiandabao.com/tags/Sentiment/"}]},{"title":"Hexo配置","date":"2016-02-04T03:02:35.000Z","path":"2016/02/04/Hexo配置/","text":"Hexo配置 ： 关于Hexo的一些配置，这是初来乍到的开始。 Hexo配置GitHub博客 好久都想搞一下博客这个东西，每次都弄了好长时间又放弃了，感觉对于写前端的我，真是麻烦，最近快过年了，最后一个版本也上线了，闲了一段时间，想起来Github上的博客还闲置着，终于有时间搞搞了。 网上已经有很多对于hexo的配置安装，我这里只是写我自己安装步骤和遇到的问题。 开始部署首先在Github上有hexo的源代码 这里是连接hexo 安装hexo 1npm install hexo-cli -g 通过终端cd 进入到自己的博客文件夹 1hexo init 会有如下文件在你的博客目录[~ tree -L 1 demodemo├── _config.yml├── package.json├── scaffolds├── source└── themes 3 directories, 2 files] 这样一个简单的博客初始化就完成了。不过还不能运行，下来我让它跑起来。 本地运行 现在用hexo generate生成静态文件，然后用hexo server运行本地服务器，打开浏览器输入http://0.0.0.0:4000/查看效果。如果发现有问题，在md文件改了之后，刷新页面就可以看到更改的效果了 配置 接下来我们要让代码运行到github上 _config.yml文件配置 主要是这一部分的设置，会影响到你在网页上的展示，如果你出现404页面，就是因为这里没有设置你自己的博客代码地址1234deploy: type: git #最新版3.X把这个github缩写成git了，记得空格. repository: \"https://github.com/tiandabao/tiandabao.github.io.git\" branch: master 然后提交到github上就行了 其实在这个过程中有好多坑，这里是我遇到的和解决办法 在运行hexo generate时候会出现如下代码 123&#123; [Error: Cannot find module './build/Release/DTraceProviderBindings'] code: 'MODULE_NOT_FOUND' &#125;&#123; [Error: Cannot find module './build/default/DTraceProviderBindings'] code: 'MODULE_NOT_FOUND' &#125;&#123; [Error: Cannot find module './build/Debug/DTraceProviderBindings'] code: 'MODULE_NOT_FOUND' &#125; 解决办法。1$ npm install hexo --no-optional 注意 这个地方运行上面的代码是要在自己博客的目录下，不然不能生效。 在运行hexo deploy时候有时候会提示如下1ERROR Deployer not found : git 解决方法在自己博客目录下运行1npm install hexo-deployer-git --save 在提交github的时候会出现类似于这样的代码123modified: .DS_Storemodified: .deploy_git (modified content, untracked content)modified: themes/yilia (modified content, untracked content) 这部分不用管，主题是从远端clone的， 主题设置可以看这篇博客yilia在设置主题的时候，有个头像问题，一直没解决，就是图片的地址，处理方法：我把图片放到public/images/avatar.jpg下，提交到github后我可以找到我图片的地址“https://github.com/tiandabao/tiandabao.github.io/blob/master/images/avatar.jpg“但是在主题里我设置了这个url显示不出来，后来我发现，在你要显示的图片网页上右键，复制图片网址，“https://github.com/tiandabao/tiandabao.github.io/blob/master/images/avatar.jpg?raw=true”这时图片的地址后面多了个?raw=true，这时候把这个地址赋值给你主题头像字段 1234error: Your local changes to the following files would be overwritten by merge: .DS_StorePlease, commit your changes or stash them before you can merge.Aborting 出现上面的问题，处理步骤删除本地.DS_Store，在进行pull或者push，由于.DS_Store文件存储有冲突，删掉会重新生成一分 每次提交到github前记得hexo g 和 hexo d， 不然也页面显示不出来 友情参考https://segmentfault.com/a/1190000002398039http://litten.github.io/2014/08/31/hexo-theme-yilia/http://www.jianshu.com/p/b7886271e21a","tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://www.tiandabao.com/tags/Hexo/"}]},{"title":"我的第一篇博客","date":"2016-02-03T09:31:50.000Z","path":"2016/02/03/我的第一篇博客/","text":"初来乍到","tags":[]}]