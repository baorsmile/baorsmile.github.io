<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[2018年的开始]]></title>
      <url>/2018/02/07/2018%E5%B9%B4%E7%9A%84%E5%BC%80%E5%A7%8B/</url>
      <content type="html"><![CDATA[<link href="/style.css" rel="stylesheet" type="text/css"><script src="/crypto-js.js"></script><script src="/mcommon.js"></script><script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <div id="security"> <div> <div class="input-container"> <input type="password" class="form-control" id="pass" placeholder=" 密码!!!!你懂的! "/> <label for="pass"> 密码!!!!你懂的! </label> <div class="bottom-line"></div> </div> </div> </div> <div id="encrypt-blog" style="display:none">  </div>]]></content>
      
        
        <tags>
            
            <tag> Sentiment </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Ruby]]></title>
      <url>/2018/01/05/Ruby/</url>
      <content type="html"><![CDATA[<p><strong> Ruby ：</strong> <excerpt in="" index="" |="" 首页摘要\=""><br>Ruby one more thing<br><a id="more"></a></excerpt></p>
<the rest="" of="" contents="" |="" 余下全文\="">

<h1 id="RubyGem"><a href="#RubyGem" class="headerlink" title="RubyGem"></a>RubyGem</h1><h4 id="1"><a href="#1" class="headerlink" title="1"></a>1</h4><figure class="highlight armasm"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">bundler </span>gem dabao</div></pre></td></tr></table></figure>
<h4 id="2"><a href="#2" class="headerlink" title="2"></a>2</h4><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">rake build</span></div></pre></td></tr></table></figure>
</the>]]></content>
      
        <categories>
            
            <category> Ruby </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[记忆犹新的一次面试]]></title>
      <url>/2017/09/04/%E8%AE%B0%E5%BF%86%E7%8A%B9%E6%96%B0%E7%9A%84%E4%B8%80%E6%AC%A1%E9%9D%A2%E8%AF%95/</url>
      <content type="html"><![CDATA[<p>面试就是想对象<br><a id="more"></a></p>
<the rest="" of="" contents="" |="" 余下全文\="">

<p>2017年8月10号，从一个待了三年的公司离职了，说实话还真有些不舍，公司情况大家有目共睹，走也不好，不走也不好！<br>面试的时候都会问你为啥要离开啊？说实话我只想找一个稳定的，让自己有个归属感的地方。可是这些真话没有哪个hr或者leader认可，<br>其实这是每个人的初心，他们更喜欢被骗，说一些不切实际的幻想，人都喜欢好话而已。一些牢骚而已，下面是我面试遇到一些问题</p>
<h1 id="block"><a href="#block" class="headerlink" title="block"></a>block</h1><ul>
<li>问：MRC和ARC下一般声明block用什么</li>
<li>答：MRC用copy，因为初始化实在栈上；ARC声明也用copy</li>
<li>问：ARC用strong行吗？</li>
<li>答：当然可以，ARC用strong系统会自动拷贝到堆上</li>
</ul>
<h1 id="NSString"><a href="#NSString" class="headerlink" title="NSString"></a>NSString</h1><figure class="highlight xl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">NSString *str1 = @<span class="string">"stringtest"</span>;</div><div class="line"></div><div class="line">[<span class="function"><span class="title">str1</span> retain];          // str1引用计数是多少？-&gt;</span> -<span class="number">1</span></div><div class="line"></div><div class="line">[<span class="function"><span class="title">str1</span> copy];            // str1引用计数是多少？-&gt;</span> -<span class="number">1</span></div><div class="line"></div><div class="line">NSS<span class="function"><span class="title">tring</span> *str2 = str1;          // str2引用计数是多少？-&gt;</span> -<span class="number">1</span>   <span class="function"><span class="title">str1</span>引用计数是多少？-&gt;</span> -<span class="number">1</span></div><div class="line"></div><div class="line">NSS<span class="function"><span class="title">tring</span> *str3 = [str1 copy];   // str3引用计数是多少？-&gt;</span> -<span class="number">1</span>   <span class="function"><span class="title">str1</span>引用计数是多少？-&gt;</span> -<span class="number">1</span></div><div class="line"></div><div class="line">NSS<span class="function"><span class="title">tring</span> *str4 = [str1 mutableCopy];  // str4引用计数是多少? -&gt;</span> <span class="number">1</span>   <span class="function"><span class="title">str1</span>引用计数是多少? -&gt;</span> -<span class="number">1</span></div></pre></td></tr></table></figure>
<blockquote>
<p>NSString有自己的存储空间，有点类似static，而且如果字符串相同，只会有一个内存地址</p>
</blockquote>
<p>在iOS开发中我们存储分为</p>
<ul>
<li>栈</li>
<li>堆</li>
<li>全局区(静态区) （static）</li>
<li>文字常量区 存放常量字符串，程序结束后由系统释放</li>
<li>程序代码区 存放函数的二进制代码</li>
</ul>
<h1 id="@synchronized__28_29"><a href="#@synchronized__28_29" class="headerlink" title="@synchronized ()"></a>@synchronized ()</h1><ul>
<li><p>这个后面到底接什么，接self，还是相应的属性，这个锁的原理是把括号里面的放到一个hash表里面，<br>等取值或者赋值会取hash表里面的key值，如果有就等待，具体相应</p>
</li>
<li><p>如果是<strong>self</strong>相应的类多不能更改，如果是相应的属性，其他<strong>属性</strong>是不受影响的。</p>
</li>
</ul>
<h1 id="UIView_animation"><a href="#UIView_animation" class="headerlink" title="UIView animation"></a>UIView animation</h1><h1 id="dispatch_asyc"><a href="#dispatch_asyc" class="headerlink" title="dispatch_asyc"></a>dispatch_asyc</h1><h1 id="u539F_u5B50_u5C31_u662F_u8BF4cpu_u8981_u4E0D_u5C31_u4E0D"><a href="#u539F_u5B50_u5C31_u662F_u8BF4cpu_u8981_u4E0D_u5C31_u4E0D" class="headerlink" title="原子就是说cpu要不就不"></a>原子就是说cpu要不就不</h1><p>做，要做就一定要做完某些操作才能干别的事情,对应这里就是比较和交换要一次过做完</p>
</the>]]></content>
      
        
        <tags>
            
            <tag> Sentiment </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Jenkins]]></title>
      <url>/2017/09/01/Jenkins/</url>
      <content type="html"><![CDATA[<p>Jenkins相关集成<br><a id="more"></a></p>
<p><the rest="" of="" contents="" |="" 余下全文\=""></the></p>
<h1 id="u5B89_u88C5"><a href="#u5B89_u88C5" class="headerlink" title="安装"></a>安装</h1><pre><code>brew install jenkins
</code></pre><blockquote>
<p>到这一步都说安装成功了，但是我在<strong>Users/dabao/Shared/</strong><br>压根没找到jenkins目录，所以还是老老实实在官网下载<a href="https://jenkins.io/" target="_blank" rel="external">Jenkins</a>安装吧，你就会发现在shared下面已经有了jenkins的文件。</p>
</blockquote>
<h1 id="u8FD0_u884C"><a href="#u8FD0_u884C" class="headerlink" title="运行"></a>运行</h1><ul>
<li>当你安装完成后，就就自动开发浏览器，并且打开的是<a href="http://localhost:8080，" target="_blank" rel="external">http://localhost:8080，</a><blockquote>
<p>这里又有个坑，就是会出现下图的情况，</p>
</blockquote>
</li>
</ul>
<p><img src="/2017/09/01/Jenkins/secrets.png" alt="Secrets"></p>
<blockquote>
<p>其实把如果用brew安装会有下图的key</p>
</blockquote>
<p><img src="/2017/09/01/Jenkins/key.png" alt="key"></p>
<blockquote>
<p>但是我没看到，或者我用apk安装的，那我们可以去找到/Users/Shared/Jenkins/Home/secrets 这个目录下，不用想这个目录没有权限打开，那我们可以右键-&gt;显示简介-&gt;共享与权限。如下图的操作</p>
</blockquote>
<p><img src="/2017/09/01/Jenkins/quxian.png" alt="key"></p>
<blockquote>
<p>开发initialAdminPassword，是的，你没有看错，就是打不开，还是权限问题，按照上面的做一遍，你就可以拿到key了，填到浏览器里面，就开始安装了，等着吧</p>
</blockquote>
<h1 id="u5269_u4E0B_u7684_u5176_u4ED6blog_u591A_u4E86_u53BB_u4E86_uFF0C_u6211_u60F3_u5927_u90E8_u5206_u521D_u5165Jenkins_u90FD_u9047_u5230_u6211_u8BF4_u7684_u8FD9_u79CD_u60C5_u51B5"><a href="#u5269_u4E0B_u7684_u5176_u4ED6blog_u591A_u4E86_u53BB_u4E86_uFF0C_u6211_u60F3_u5927_u90E8_u5206_u521D_u5165Jenkins_u90FD_u9047_u5230_u6211_u8BF4_u7684_u8FD9_u79CD_u60C5_u51B5" class="headerlink" title="剩下的其他blog多了去了，我想大部分初入Jenkins都遇到我说的这种情况"></a>剩下的其他blog多了去了，我想大部分初入Jenkins都遇到我说的这种情况</h1>]]></content>
      
        <categories>
            
            <category> Jenkins </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Hexo Sum]]></title>
      <url>/2017/07/22/Hexo-Sum/</url>
      <content type="html"><![CDATA[<p><strong> Hexo Sum ：</strong> <excerpt in="" index="" |="" 首页摘要\=""><br>Hexo主题，博文插入图片，添加评论，添加浏览数，加密博文<br><a id="more"></a></excerpt></p>
<the rest="" of="" contents="" |="" 余下全文\="">

<h1 id="u535A_u6587_u63D2_u5165_u56FE_u7247"><a href="#u535A_u6587_u63D2_u5165_u56FE_u7247" class="headerlink" title="博文插入图片"></a>博文插入图片</h1><ul>
<li>修改<code>_config.yml</code>里面的<code>post_asset_folder:true</code></li>
<li>在根目录下执行<code>npm install hexo-asset-image --save</code>安装插件</li>
<li><code>hexo n &quot;new&quot;</code>生成一个新的博文，在<code>source/_posts/new</code>会生一个<code>new</code>文件夹,用来存放图片</li>
<li><code>![你想输入的替代文字](new/xxx.jpg)</code></li>
</ul>
<h1 id="u6DFB_u52A0_u641C_u72D0_u7545_u8A00_u8BC4_u8BBA"><a href="#u6DFB_u52A0_u641C_u72D0_u7545_u8A00_u8BC4_u8BBA" class="headerlink" title="添加搜狐畅言评论"></a>添加搜狐畅言评论</h1><ul>
<li><p>举例我用的主题是<code>smackdown</code>在<code>themes/smackdown/layout/_partial/article.ejs</code>里面最后添加如下代码</p>
<figure class="highlight mojolicious"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="perl"> <span class="keyword">if</span> (!<span class="keyword">index</span> &amp;&amp; post.comments)&#123; </span><span class="xml"><span class="tag">%&gt;</span></span></div><div class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">id</span>=<span class="string">"comments"</span>&gt;</span></div><div class="line"><span class="comment">&lt;!--高速版，加载速度快，使用前需测试页面的兼容性--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"SOHUCS"</span> <span class="attr">sid</span>=<span class="string">"&lt;%=</span></span><span class="perl"> page.title </span><span class="xml"><span class="tag"><span class="string">%&gt;"</span> <span class="attr">style</span>=<span class="string">"padding: 0px 30px 0px 46px;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></div><div class="line">         (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">               <span class="keyword">var</span> appid = <span class="string">'你的 AppID'</span>,</div><div class="line">               conf = <span class="string">'你的 Appkey'</span>;</div><div class="line">               <span class="keyword">var</span> doc = <span class="built_in">document</span>,</div><div class="line">               s = doc.createElement(<span class="string">'script'</span>),</div><div class="line">               h = doc.getElementsByTagName(<span class="string">'head'</span>)[<span class="number">0</span>] || doc.head || doc.documentElement;</div><div class="line">               s.type = <span class="string">'text/javascript'</span>;</div><div class="line">               s.charset = <span class="string">'utf-8'</span>;</div><div class="line">               s.src =  <span class="string">'http://assets.changyan.sohu.com/upload/changyan.js?conf='</span>+ conf +<span class="string">'&amp;appid='</span> + appid;</div><div class="line">               h.insertBefore(s,h.firstChild);</div><div class="line">               <span class="built_in">window</span>.SCS_NO_IFRAME = <span class="literal">true</span>;</div><div class="line">         &#125;)()</div><div class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">%</span></span><span class="perl"> &#125; </span><span class="xml"><span class="tag">%&gt;</span></span></div></pre></td></tr></table></figure>
</li>
<li><p>畅言目前需要自己的域名网站备案才可以使用，具体的创建可以按照这篇博文实现<a href="http://blog.csdn.net/tzs_1041218129/article/details/70163194" target="_blank" rel="external">Github pages + Hexo 博客 yilia 主题使用畅言评论系统</a></p>
</li>
</ul>
<h1 id="u6DFB_u52A0_u9605_u8BFB_u91CF"><a href="#u6DFB_u52A0_u9605_u8BFB_u91CF" class="headerlink" title="添加阅读量"></a>添加阅读量</h1><ul>
<li>可以参考<a href="http://blog.smackdown.gebilaowu.cn/2016/10/31/hexo%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E9%98%85%E8%AF%BB%E6%95%B0/" target="_blank" rel="external">为hexo-theme-smackdown主题添加阅读数</a></li>
</ul>
<h1 id="u6587_u7AE0_u52A0_u5BC6"><a href="#u6587_u7AE0_u52A0_u5BC6" class="headerlink" title="文章加密"></a>文章加密</h1><ul>
<li>可参考：<a href="https://github.com/MikeCoder/hexo-blog-encrypt/blob/master/ReadMe.zh.md" target="_blank" rel="external">hexo-blog-encrypt</a></li>
<li>这个插件目前只适合<a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="external"><code>Next</code></a>主题</li>
</ul>
</the>]]></content>
      
        
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[实用技巧]]></title>
      <url>/2017/07/17/%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/</url>
      <content type="html"><![CDATA[<p><strong> 实用技巧 ：</strong> <excerpt in="" index="" |="" 首页摘要\=""><br>主要是一些关于实用技巧<br><a id="more"></a></excerpt></p>
<the rest="" of="" contents="" |="" 余下全文\="">

<h1 id="Git_u5FFD_u7565_u6587_u4EF6"><a href="#Git_u5FFD_u7565_u6587_u4EF6" class="headerlink" title="Git忽略文件"></a>Git忽略文件</h1><ul>
<li>参考：<a href="http://www.vitah.net/posts/17c165e8/" target="_blank" rel="external">这篇博文</a></li>
</ul>
</the>]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[iOS关键知识点整理]]></title>
      <url>/2017/07/17/iOS%E5%85%B3%E9%94%AE%E7%9F%A5%E8%AF%86%E7%82%B9%E6%95%B4%E7%90%86/</url>
      <content type="html"><![CDATA[<p><strong> iOS关键知识点整理 ：</strong> <excerpt in="" index="" |="" 首页摘要\=""><br>主要是关于iOS开发关键知识点整理<br><a id="more"></a></excerpt></p>
<the rest="" of="" contents="" |="" 余下全文\="">

<h4 id="Coy/MutableCopy_28_u6DF1_u6D45_u62F7_u8D1D_29"><a href="#Coy/MutableCopy_28_u6DF1_u6D45_u62F7_u8D1D_29" class="headerlink" title="Coy/MutableCopy(深浅拷贝)"></a>Coy/MutableCopy(深浅拷贝)</h4><blockquote>
<p>只有对不可变对象进行copy操作是指针复制（浅复制），其它情况都是内容复制（深复制）！</p>
</blockquote>
<p><strong>这句话是说，只要是类似于NSArray/NSString这类不可变兑现的copy，都是指针复制，而对带有Mutable前缀的例如NSMutableArray这类的不管是copy还是MutableCopy都是深拷贝，要重新在内存开辟空间*</strong></p>
<h4 id="obejct__3D_nil__u771F_u7684_u50CF_u4F60_u60F3_u50CF_u7684_u4E00_u6837_u5417"><a href="#obejct__3D_nil__u771F_u7684_u50CF_u4F60_u60F3_u50CF_u7684_u4E00_u6837_u5417" class="headerlink" title="obejct = nil 真的像你想像的一样吗"></a>obejct = nil 真的像你想像的一样吗</h4><p>整理copy时发现一个问题，比如：<br><figure class="highlight erlang"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">NSMutableArray *ones = [[NSMutableArray alloc] initWithObjects:@<span class="string">"1"</span>, nil];</div><div class="line">NSMutableArray *twos = ones;</div><div class="line">NSLog(@<span class="string">"one: %@, twos: %@"</span>, ones, twos);</div><div class="line">NSLog(@<span class="string">"&amp;one:%x, &amp;tows:%x"</span>, &amp;ones, &amp;twos);</div><div class="line"></div><div class="line"><span class="function"><span class="title">log</span></span></div><div class="line"><span class="params">(lldb)</span> <span class="title">p</span> &amp;<span class="title">ones</span></div><div class="line"><span class="params">(NSMutableArray **)</span> $0 = 0<span class="title">x00007fff580809c8</span></div><div class="line"><span class="params">(lldb)</span> <span class="title">p</span> &amp;<span class="title">twos</span></div><div class="line"><span class="params">(NSMutableArray **)</span> $1 = 0<span class="title">x00007fff580809c0</span></div><div class="line"><span class="params">(lldb)</span> <span class="title">po</span> <span class="title">ones</span></div><div class="line">&lt;__NSA<span class="title">rrayM</span> 0<span class="title">x60800004a590</span>&gt;<span class="params">(</span></div><div class="line"><span class="number">1</span></div><div class="line">)</div><div class="line"></div><div class="line"><span class="params">(lldb)</span> <span class="title">po</span> <span class="title">twos</span></div><div class="line">&lt;__NSA<span class="title">rrayM</span> 0<span class="title">x60800004a590</span>&gt;<span class="params">(</span></div><div class="line"><span class="number">1</span></div><div class="line">)</div></pre></td></tr></table></figure></p>
<p>这里面的这个<strong>twos = ones</strong>是copy呢还是strong，<strong>strong</strong>真像我们所说的只是简单的赋值吗？看样子这种简单的不复制也会产生一个新的指针地址</p>
<p>我又做了一个例子来验证这一理论</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">NextViewController *next = [[NextViewController alloc] init];</div><div class="line"><span class="built_in">UIView</span> *view = [<span class="built_in">UIView</span> new];</div><div class="line"><span class="built_in">NSLog</span>(<span class="string">@"view %@, &amp;view %x"</span>, view, &amp;view);</div><div class="line">next.nameView = view;</div><div class="line">[<span class="keyword">self</span>.navigationController pushViewController:next animated:<span class="literal">YES</span>];</div><div class="line"></div><div class="line">log</div><div class="line">(lldb) po view</div><div class="line">&lt;<span class="built_in">UIView</span>: <span class="number">0x7fb1afd07240</span>; frame = (<span class="number">0</span> <span class="number">0</span>; <span class="number">0</span> <span class="number">0</span>); layer = &lt;<span class="built_in">CALayer</span>: <span class="number">0x61800023a860</span>&gt;&gt;</div><div class="line"></div><div class="line">(lldb) po &amp;view</div><div class="line"><span class="number">0x00007fff5d3f2608</span></div><div class="line"></div><div class="line">在NextViewCotroller.h</div><div class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">NextViewController</span> : <span class="title">UIViewController</span></span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">UIView</span> *nameView;</div><div class="line"><span class="keyword">@end</span></div><div class="line">在NextViewCotroller.viewDidLoad</div><div class="line">- (<span class="keyword">void</span>)viewDidLoad &#123;</div><div class="line">    [<span class="keyword">super</span> viewDidLoad];    </div><div class="line">    <span class="built_in">NSLog</span>(<span class="string">@"view %@, &amp;view %x"</span>, _nameView, &amp;_nameView);</div><div class="line">&#125;</div><div class="line"></div><div class="line">log</div><div class="line">(lldb) po _nameView</div><div class="line">&lt;<span class="built_in">UIView</span>: <span class="number">0x7fb1afd07240</span>; frame = (<span class="number">0</span> <span class="number">0</span>; <span class="number">0</span> <span class="number">0</span>); layer = &lt;<span class="built_in">CALayer</span>: <span class="number">0x61800023a860</span>&gt;&gt;</div><div class="line"></div><div class="line">(lldb) po &amp;_nameView</div><div class="line"><span class="number">0x00007fb1afd03bb8</span></div></pre></td></tr></table></figure>
<p>对比前后两次赋值的指针的地址变了，但是所指向的内存地址没有变，这也说明strong不是简单的赋值</p>
<p>下来我们传一个数据进来试试<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">NextViewController *next = [[NextViewController alloc] init];</div><div class="line"><span class="built_in">NSArray</span> *ones = @[<span class="string">@"name"</span>];</div><div class="line"><span class="built_in">NSLog</span>(<span class="string">@"ones %@, &amp;ones %x"</span>, ones, &amp;ones);</div><div class="line">next.names = ones;</div><div class="line">[<span class="keyword">self</span>.navigationController pushViewController:next animated:<span class="literal">YES</span>];</div><div class="line"></div><div class="line">log</div><div class="line">(lldb) po ones</div><div class="line">&lt;__NSSingleObjectArrayI <span class="number">0x6180000100a0</span>&gt;(</div><div class="line">name</div><div class="line">)</div><div class="line">(lldb) po &amp;ones</div><div class="line"><span class="number">0x00007fff5d7aa5f8</span></div><div class="line"></div><div class="line">在NextViewCotroller.h</div><div class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">NextViewController</span> : <span class="title">UIViewController</span></span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">NSArray</span> *names;</div><div class="line"><span class="keyword">@end</span></div><div class="line">在NextViewCotroller.viewDidLoad</div><div class="line">- (<span class="keyword">void</span>)viewDidLoad &#123;</div><div class="line">    [<span class="keyword">super</span> viewDidLoad];    </div><div class="line">    <span class="built_in">NSLog</span>(<span class="string">@"view %@, &amp;view %x"</span>, _names, &amp;_names);</div><div class="line">&#125;</div><div class="line"></div><div class="line">log</div><div class="line">(lldb) po _names</div><div class="line">&lt;__NSSingleObjectArrayI <span class="number">0x6180000100a0</span>&gt;(</div><div class="line">name</div><div class="line">)</div><div class="line">(lldb) po &amp;_names</div><div class="line"><span class="number">0x00007fec1a510dd0</span></div></pre></td></tr></table></figure></p>
<blockquote>
<p>发现还是一样的， 下来我们把strong 改成copy试试会发生什么</p>
</blockquote>
<figure class="highlight lisp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">(<span class="name">lldb</span>) po ones</div><div class="line">&lt;__NSSingleObjectArrayI <span class="number">0</span>x618000019330&gt;(</div><div class="line"><span class="name">name</span></div><div class="line">)</div><div class="line">(<span class="name">lldb</span>) po &amp;ones</div><div class="line"><span class="number">0</span>x00007fff51e3d5f8</div><div class="line"></div><div class="line">(<span class="name">lldb</span>) po _names</div><div class="line">&lt;__NSSingleObjectArrayI <span class="number">0</span>x618000019330&gt;(</div><div class="line"><span class="name">name</span></div><div class="line">)</div><div class="line">(<span class="name">lldb</span>) po &amp;_names</div><div class="line"><span class="number">0</span>x00007f92c710b958</div></pre></td></tr></table></figure>
<blockquote>
<p>最终发现也是一样的指针创建新的，指针指向的内存地址没变<br>苹果的做法是：我即使把一个初始化的好的变量赋值给其他变量时，都进行了一次指针拷贝，也就是我们所谓的浅拷贝，这样防止，一个指针值成nil，这个指针原来指向的内存还有其他指针指向，这部分内存也不会马上被释放掉，保证了内存数据安全。<br>copy在赋值上不同于strong，我们用的最多的就是给array copy，因为copy后的数组都是不可操作的，这样保证了我给一个对象传入的数据不被修改，如果想修改就出入一个NSMutable，并把属性改成strong，这样内外都可以修改。</p>
</blockquote>
<p><em>对于内存的处理，有一次我是在用realm里面遇到过一个bug</em></p>
<blockquote>
<p>当初是我把数据库里面的数据全部取出来，然后放到数组里面，然后把数据库里面这些数据删掉，然而我数组里的数据也变成了Invalid类型， 这不得不说realm关联的强大，realm应该是对从数据库取出来的数据进行了标记，当被释放掉后，我自己数组里面的存的其实就是一组野指针，没有任何指向。</p>
</blockquote>
<h4 id="UIScrollView_u6216_u8005_u5176_u4ED6Offset_u504F_u79FB_u91CF"><a href="#UIScrollView_u6216_u8005_u5176_u4ED6Offset_u504F_u79FB_u91CF" class="headerlink" title="UIScrollView或者其他Offset偏移量"></a>UIScrollView或者其他Offset偏移量</h4><ul>
<li>位移转化成缩放比例</li>
</ul>
<figure class="highlight openscad"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// offset 位移偏量</span></div><div class="line"><span class="comment">// scaleMargin 从小变大、从大变小偏量（不是比例） MAX(startSize, finalSize) - finalSize或者 MAX(startSize, finalSize) - startSize</span></div><div class="line"><span class="comment">// finalSize 最终size</span></div><div class="line"><span class="comment">// startSize 最大size MAX(startSize, finalSize)</span></div><div class="line"><span class="comment">// actualOffset 实际真实运行大小</span></div><div class="line"></div><div class="line">CGFloat <span class="built_in">scale</span> = (<span class="built_in">offset</span> * (scaleMargin/actualOffset) + finalSize)/startSize;</div></pre></td></tr></table></figure>
<h1 id="KVO"><a href="#KVO" class="headerlink" title="KVO"></a>KVO</h1><h2 id="u5751"><a href="#u5751" class="headerlink" title="坑"></a>坑</h2><ul>
<li>可以对同一个属性就行多次添加，在监听回掉里里面会接受到多个添加的kepath, 也就是说添加了几个回调几个；在rmove时候也是，添加了几个就remvoe几个，不管是否是同一个属性</li>
<li>如果你添加一个属性，但是你remove了两次，就会crash，<strong>这里强调一点，如果你对一个属性添加了多次，你就要remove多次，这是不会crash的</strong></li>
<li>防止remove掉父类的你需要在add时候添加一个上下文context，来进行标记是否是自己添加，再在remove的时候remove掉自己的就行了</li>
</ul>
<h2 id="u5B9E_u73B0_u65B9_u5F0F"><a href="#u5B9E_u73B0_u65B9_u5F0F" class="headerlink" title="实现方式"></a>实现方式</h2><ul>
<li>当你观察一个对象时，一个新的类会动态被创建。这个类继承自该对象的原本的类，并重写了被观察属性的 setter 方法。自然，重写的 setter 方法会负责在调用原 setter 方法之前和之后，通知所有观察对象值的更改。最后把这个对象的 isa 指针 ( isa 指针告诉 Runtime 系统这个对象的类是什么 ) 指向这个新创建的子类，对象就神奇的变成了新创建的子类的实例。</li>
</ul>
<h1 id="GCG"><a href="#GCG" class="headerlink" title="GCG"></a>GCG</h1><h2 id="dispatch_apply_uFF0C_u5FAA_u73AF_u591A_u5C11_u6B21"><a href="#dispatch_apply_uFF0C_u5FAA_u73AF_u591A_u5C11_u6B21" class="headerlink" title="dispatch_apply，循环多少次"></a>dispatch_apply，循环多少次</h2><h3 id="u5E94_u7528_u573A_u666F"><a href="#u5E94_u7528_u573A_u666F" class="headerlink" title="应用场景"></a>应用场景</h3><ul>
<li>要处理大数据时候使用apply会比多开线程来的好</li>
<li>如果我们从服务器获取一个数组的数据，那么我们可以使用该方法从而快速的批量字典转模型。<figure class="highlight lisp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">NSArray *dictArray = <span class="literal">nil</span><span class="comment">;//存放从服务器返回的字典数组</span></div><div class="line"></div><div class="line">    dispatch_queue_t queue = dispatch_queue_create(<span class="string">"queue"</span>, DISPATCH_QUEUE_CONCURRENT)<span class="comment">;</span></div><div class="line">    dispatch_async(<span class="name">queue</span>, ^&#123;</div><div class="line"></div><div class="line">        dispatch_apply(<span class="name">dictArray</span>.count, queue,  ^(<span class="name">size_t</span> index)&#123;</div><div class="line">            //字典转模型</div><div class="line"></div><div class="line">        &#125;)<span class="comment">;</span></div><div class="line">        dispatch_async(<span class="name">dispatch_get_main_queue</span>(), ^&#123;</div><div class="line">            NSLog(@<span class="string">"主线程更新"</span>)<span class="comment">;</span></div><div class="line">        &#125;)<span class="comment">;</span></div><div class="line">    &#125;)<span class="comment">;</span></div></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<p>作者：lltree<br>转自：<a href="http://www.jianshu.com/p/3b12bb90bb15" target="_blank" rel="external">http://www.jianshu.com/p/3b12bb90bb15</a></p>
</blockquote>
<h3 id="dispatch_barrier_async/dispatch_barrier_sync_uFF0C_u5C4F_u969C"><a href="#dispatch_barrier_async/dispatch_barrier_sync_uFF0C_u5C4F_u969C" class="headerlink" title="dispatch_barrier_async/dispatch_barrier_sync，屏障"></a>dispatch_barrier_async/dispatch_barrier_sync，屏障</h3><ul>
<li><p>DISPATCH_QUEUE_CONCURRENT 队列中才起作用,在全局并发队列 dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0) 中无效,也就是说起不到屏障的作用</p>
</li>
<li><p>放到子线程里面做dispatch_barrier_sync，发现不起作用，也不会打印block里面的内容，但是用dispatch_barrier_async是可以的</p>
</li>
</ul>
<figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">dispatch_queue_t </span>concurrent_queue = <span class="keyword">dispatch_queue_create("concurrent_queue", </span><span class="keyword">DISPATCH_QUEUE_CONCURRENT);</span></div><div class="line"></div><div class="line"><span class="keyword">dispatch_async(concurrent_queue, </span>^()&#123;</div><div class="line">    NSLog(@<span class="string">"task-1--%@"</span>,[NSThread currentThread])<span class="comment">;</span></div><div class="line">&#125;)<span class="comment">;</span></div><div class="line"><span class="keyword">dispatch_async(concurrent_queue, </span>^()&#123;</div><div class="line">    NSLog(@<span class="string">"task-2--%@"</span>,[NSThread currentThread])<span class="comment">;</span></div><div class="line">&#125;)<span class="comment">;</span></div><div class="line"><span class="keyword">dispatch_sync(concurrent_queue, </span>^()&#123;</div><div class="line">    NSLog(@<span class="string">"task-3--%@"</span>,[NSThread currentThread])<span class="comment">;</span></div><div class="line"></div><div class="line">    <span class="keyword">dispatch_async(concurrent_queue, </span>^()&#123;</div><div class="line">        NSLog(@<span class="string">"task-5--%@"</span>,[NSThread currentThread])<span class="comment">;</span></div><div class="line">    &#125;)<span class="comment">;</span></div><div class="line">    <span class="keyword">dispatch_async(concurrent_queue, </span>^()&#123;</div><div class="line">        NSLog(@<span class="string">"task-6--%@"</span>,[NSThread currentThread])<span class="comment">;</span></div><div class="line">    &#125;)<span class="comment">;</span></div><div class="line"></div><div class="line">    <span class="keyword">dispatch_barrier_async(concurrent_queue, </span>^()&#123;</div><div class="line">        NSLog(@<span class="string">"dispatch_barrier_async--%@"</span>,[NSThread currentThread])<span class="comment">;</span></div><div class="line">    &#125;)<span class="comment">;</span></div><div class="line"></div><div class="line">    <span class="keyword">dispatch_async(concurrent_queue, </span>^()&#123;</div><div class="line">        NSLog(@<span class="string">"task-4--%@"</span>,[NSThread currentThread])<span class="comment">;</span></div><div class="line">    &#125;)<span class="comment">;</span></div><div class="line">&#125;)<span class="comment">;</span></div><div class="line"></div><div class="line"><span class="number">2017</span>-07-17 <span class="number">19</span>:<span class="number">08</span>:<span class="number">17</span>.<span class="number">998</span> <span class="keyword">BackBlock[32724:28690837] </span>task-3--&lt;NSThread: <span class="number">0x618000066040</span>&gt;&#123;number = <span class="number">1</span>, name = main&#125;</div><div class="line"><span class="number">2017</span>-07-17 <span class="number">19</span>:<span class="number">08</span>:<span class="number">17</span>.<span class="number">998</span> <span class="keyword">BackBlock[32724:28691040] </span>task-2--&lt;NSThread: <span class="number">0x61000006bbc0</span>&gt;&#123;number = <span class="number">4</span>, name = (null)&#125;</div><div class="line"><span class="number">2017</span>-07-17 <span class="number">19</span>:<span class="number">08</span>:<span class="number">17</span>.<span class="number">998</span> <span class="keyword">BackBlock[32724:28691038] </span>task-1--&lt;NSThread: <span class="number">0x618000068980</span>&gt;&#123;number = <span class="number">3</span>, name = (null)&#125;</div><div class="line"><span class="number">2017</span>-07-17 <span class="number">19</span>:<span class="number">08</span>:<span class="number">17</span>.<span class="number">999</span> <span class="keyword">BackBlock[32724:28691042] </span>task-5--&lt;NSThread: <span class="number">0x6180000690c0</span>&gt;&#123;number = <span class="number">5</span>, name = (null)&#125;</div><div class="line"><span class="number">2017</span>-07-17 <span class="number">19</span>:<span class="number">08</span>:<span class="number">17</span>.<span class="number">999</span> <span class="keyword">BackBlock[32724:28691057] </span>task-6--&lt;NSThread: <span class="number">0x60800006c340</span>&gt;&#123;number = <span class="number">6</span>, name = (null)&#125;</div><div class="line"><span class="number">2017</span>-07-17 <span class="number">19</span>:<span class="number">08</span>:<span class="number">17</span>.<span class="number">999</span> <span class="keyword">BackBlock[32724:28691057] </span><span class="keyword">dispatch_barrier_async--&lt;NSThread: </span><span class="number">0x60800006c340</span>&gt;&#123;number = <span class="number">6</span>, name = (null)&#125;</div><div class="line"><span class="number">2017</span>-07-17 <span class="number">19</span>:<span class="number">08</span>:<span class="number">17</span>.<span class="number">999</span> <span class="keyword">BackBlock[32724:28691057] </span>task-4--&lt;NSThread: <span class="number">0x60800006c340</span>&gt;&#123;number = <span class="number">6</span>, name = (null)&#125;</div></pre></td></tr></table></figure>
<h3 id="u5173_u4E8ENSArray_u53D6_u6570_u636E_u5B89_u5168_u6027_u6574_u7406"><a href="#u5173_u4E8ENSArray_u53D6_u6570_u636E_u5B89_u5168_u6027_u6574_u7406" class="headerlink" title="关于NSArray取数据安全性整理"></a>关于NSArray取数据安全性整理</h3><p>大家都知道，如果取的index大于数组个数会产生crash，这时候我们需要判断</p>
<ul>
<li>OC<figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">NSArray *array = @[@<span class="string">"1"</span>];</div><div class="line">NSInteger <span class="built_in">number</span> = <span class="number">1</span>;</div><div class="line"><span class="keyword">if</span> (<span class="built_in">number</span> &lt; array.<span class="built_in">count</span>) &#123;</div><div class="line">    NSLog(@<span class="string">"here is real value"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<blockquote>
<p>这个地方有一个问题就是如果 number = -1时候，是否&lt;array.count,答案是： 否，因为array.count是NSUInteger，比较的时候会转换成NSUInteger就行比较，-1是多少呢，其实变了一个很大的数</p>
</blockquote>
</blockquote>
<ul>
<li>Swift<figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">let array = [<span class="string">AnyObject</span>](<span class="link"></span>)</div><div class="line">let number = -1</div><div class="line">if number &gt; 0 &amp;&amp; number <span class="xml"><span class="tag">&lt; <span class="attr">array.count</span> &#123;</span></span></div><div class="line">    <span class="attr">print</span>("<span class="attr">real</span> <span class="attr">data</span>")</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<blockquote>
<p>在swift当中，就不会number和array.count 都是int类型，有正负之分，所以要添加一个判断，number是否小于零，换成NSArray也是一样，count都变成了int型</p>
</blockquote>
</blockquote>
</the>]]></content>
      
        
        <tags>
            
            <tag> iOS </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Swift学习笔记]]></title>
      <url>/2017/07/13/Swift%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<p><strong> Swift学习笔记 ：</strong> <excerpt in="" index="" |="" 首页摘要\=""><br>主要是关于Swift学习笔记<br><a id="more"></a></excerpt></p>
<the rest="" of="" contents="" |="" 余下全文\="">

<h3 id="5Bopen/public_5D_u548C_5Bprivate/fileprivate_5D"><a href="#5Bopen/public_5D_u548C_5Bprivate/fileprivate_5D" class="headerlink" title="[open/public]和[private/fileprivate]"></a>[open/public]和[private/fileprivate]</h3><h4 id="public"><a href="#public" class="headerlink" title="public"></a>public</h4><p>1.使用public修饰的类,属性或方法,可以被任何类访问<br>2.但在其他的module中不可以被override和继承,而在本module可以</p>
<blockquote>
<p>module内和module外的区别 ： module内是指不需要使用import引用文件，就可以创建对象，表示module内，而module外是指需要使用import文件才能创建对象才能使用</p>
<p>这里有个很好的module例子，比如说你项目中用到了<strong>pods</strong>,你要继承里面一个类，这时候public和open就起到作用，但是<strong>如果你在工程里面，通俗的说就是基本上和open没有区别</strong></p>
</blockquote>
<h4 id="open"><a href="#open" class="headerlink" title="open"></a>open</h4><p>1.可以被任何人使用<br>2.也可以被override和继承,这是和public的区别</p>
<h4 id="private"><a href="#private" class="headerlink" title="private"></a>private</h4><p>只在自己的类里面可以使用，在类外不能用，<strong>就是说,不管另外一个类是否在这个文件里，都不能访问，包括自己的extension里面</strong></p>
<h4 id="fileprivate"><a href="#fileprivate" class="headerlink" title="fileprivate"></a>fileprivate</h4><p>顾名思义，只要在这个文件里面，所有的类、extension都可以访问，比如说类A和B都在同一个swift文件里面，A里面初始化B，调用B里面属性方法都可以</p>
<h3 id="String_u683C_u5F0F_u5316"><a href="#String_u683C_u5F0F_u5316" class="headerlink" title="String格式化"></a>String格式化</h3><p>1，下面是一个浮点类型的数字转成String字符串的例子</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">var</span> f = <span class="number">123.32342342</span></div><div class="line"><span class="selector-tag">var</span> s:String = <span class="string">"\(f)"</span> <span class="comment">//123.32342342</span></div></pre></td></tr></table></figure>
<p>2，如果要保留两位小数<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> f = 123.32342342</div><div class="line"><span class="keyword">var</span> s = <span class="built_in">String</span>(<span class="keyword">format</span>: <span class="string">"%.2f"</span>, f) <span class="comment">//123.32</span></div></pre></td></tr></table></figure></p>
<p>3，转成十六进制格式字符串<br><figure class="highlight gauss"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> i = <span class="number">255</span></div><div class="line"><span class="keyword">let</span> s:<span class="keyword">String</span> = <span class="keyword">String</span>(<span class="keyword">format</span>: <span class="string">"%x"</span>, i) <span class="comment">//ff</span></div></pre></td></tr></table></figure></p>
<p>4，不足六位前面补0<br><figure class="highlight gauss"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> i = <span class="number">255</span></div><div class="line"><span class="keyword">let</span> s:<span class="keyword">String</span> = <span class="keyword">String</span>(<span class="keyword">format</span>: <span class="string">"%06x"</span>, i) <span class="comment">//0000ff</span></div></pre></td></tr></table></figure></p>
<h3 id="Array_u548CDictionary"><a href="#Array_u548CDictionary" class="headerlink" title="Array和Dictionary"></a>Array和Dictionary</h3><h5 id="Array"><a href="#Array" class="headerlink" title="Array"></a>Array</h5><ul>
<li>遍历</li>
</ul>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">let count: Int = <span class="number">10</span></div><div class="line"></div><div class="line"><span class="keyword">for</span> <span class="selector-tag">i</span> <span class="keyword">in</span> <span class="number">0</span>..&lt; count &#123;</div><div class="line">    <span class="comment">// 0 - 9</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">for</span> <span class="selector-tag">i</span> <span class="keyword">in</span> <span class="number">0</span>..<span class="selector-class">.count</span> &#123;</div><div class="line">    <span class="comment">// 0 - 10</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="Dictionary"><a href="#Dictionary" class="headerlink" title="Dictionary"></a>Dictionary</h4><ul>
<li>遍历</li>
</ul>
<figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> dict: Dictionary  = [<span class="string">"key"</span>:<span class="string">"value"</span>]</div><div class="line"></div><div class="line"><span class="keyword">for</span> (key, <span class="keyword">value</span>) <span class="keyword">in</span> dict &#123;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">dict.forEach &#123; (key, <span class="keyword">value</span>) <span class="keyword">in</span></div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">(dict <span class="keyword">as</span> NSDictionary).enumerateKeysAndObjects(&#123; (key, <span class="keyword">value</span>, stop) <span class="keyword">in</span></div><div class="line"></div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<h4 id="Keyboard"><a href="#Keyboard" class="headerlink" title="Keyboard"></a>Keyboard</h4><figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">willShow</span><span class="params">(<span class="number">_</span> center: Notification)</span></span> &#123;</div><div class="line">    <span class="keyword">self</span>.handleKeyboard(center)</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">willHide</span><span class="params">(<span class="number">_</span> center: Notification)</span></span> &#123;</div><div class="line">    <span class="keyword">self</span>.handleKeyboard(center)</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">handleKeyboard</span><span class="params">(<span class="number">_</span> center: Notification)</span></span> &#123;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> <span class="keyword">let</span> nInfo = (center <span class="keyword">as</span> <span class="type">NSNotification</span>).userInfo, <span class="keyword">let</span> value = nInfo[<span class="type">UIKeyboardFrameEndUserInfoKey</span>] <span class="keyword">as</span>? <span class="type">NSValue</span> &#123;</div><div class="line"></div><div class="line">        <span class="keyword">let</span> frame = value.cgRectValue</div><div class="line"></div><div class="line">        <span class="keyword">let</span> duration: <span class="type">CGFloat</span> = nInfo[<span class="type">UIKeyboardAnimationDurationUserInfoKey</span>] <span class="keyword">as</span>! <span class="type">CGFloat</span></div><div class="line"></div><div class="line">        <span class="keyword">let</span> keyboardMoveY: <span class="type">CGFloat</span> = frame.origin.y - kMainScreen_Height()</div><div class="line"></div><div class="line">        <span class="type">UIView</span>.animate(withDuration: <span class="type">TimeInterval</span>(duration), animations: &#123;</div><div class="line">            <span class="keyword">self</span>.transform = <span class="type">CGAffineTransform</span>(translationX: <span class="number">0</span>, y: keyboardMoveY);</div><div class="line">        &#125;)</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="protocol"><a href="#protocol" class="headerlink" title="protocol"></a>protocol</h4><ul>
<li><p>总结一句话：<strong>只要协议里面声明的函数，优先调用实现，没有声明按类型区分调用</strong></p>
</li>
<li><p>如果类型推断得到的是实际的类型</p>
<ul>
<li>那么类型中的实现将被调⽤；如果类型中没有实现的话，那么协议扩展中的默认实现将 被使⽤</li>
</ul>
</li>
<li>如果类型推断得到的是协议，⽽不是实际类型 并且⽅法在协议中进⾏了定义，<ul>
<li>那么类型中的实现将被调⽤；如果类型中没有实现，那 么协议扩展中的默认实现被使⽤ 否则 (也就是⽅法没有在协议中定义)，扩展中的默认实现将被调⽤</li>
</ul>
</li>
</ul>
</the>]]></content>
      
        
        <tags>
            
            <tag> iOS </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[MyBaby]]></title>
      <url>/2017/03/02/MyBaby/</url>
      <content type="html"><![CDATA[<link href="/style.css" rel="stylesheet" type="text/css"><script src="/crypto-js.js"></script><script src="/mcommon.js"></script><script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <div id="security"> <div> <div class="input-container"> <input type="password" class="form-control" id="pass" placeholder=" 密码!!!!你懂的! "/> <label for="pass"> 密码!!!!你懂的! </label> <div class="bottom-line"></div> </div> </div> </div> <div id="encrypt-blog" style="display:none">  </div>]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[常用的iOS开发库]]></title>
      <url>/2017/02/06/%E5%B8%B8%E7%94%A8%E7%9A%84iOS%E5%BC%80%E5%8F%91%E5%BA%93/</url>
      <content type="html"><![CDATA[<p><strong> 常用的iOS开发库 ：</strong> <excerpt in="" index="" |="" 首页摘要\=""><br>一些自己发现的实用的第三方库<br><a id="more"></a></excerpt></p>
<the rest="" of="" contents="" |="" 余下全文\="">

<h1 id="u6301_u7EED_u66F4_u65B0ing"><a href="#u6301_u7EED_u66F4_u65B0ing" class="headerlink" title="持续更新ing"></a>持续更新ing</h1><h3 id="33__u4E2A_2017__u5E74_u5FC5_u987B_u4E86_u89E3_u7684_iOS__u5F00_u6E90_u5E93"><a href="#33__u4E2A_2017__u5E74_u5FC5_u987B_u4E86_u89E3_u7684_iOS__u5F00_u6E90_u5E93" class="headerlink" title="33 个 2017 年必须了解的 iOS 开源库"></a><a href="http://www.tuicool.com/articles/zi2UfaE" target="_blank" rel="external">33 个 2017 年必须了解的 iOS 开源库</a></h3><h4 id="u7F13_u5B58"><a href="#u7F13_u5B58" class="headerlink" title="缓存"></a>缓存</h4><ul>
<li><a href="https://github.com/enormego/EGOCache" target="_blank" rel="external">EGOCache</a></li>
</ul>
<h4 id="u6EDA_u52A8_u89C6_u56FE"><a href="#u6EDA_u52A8_u89C6_u56FE" class="headerlink" title="滚动视图"></a>滚动视图</h4><ul>
<li><a href="https://github.com/Cleveroad/CRPageViewController" target="_blank" rel="external">CRPageViewController</a></li>
</ul>
<h4 id="u652F_u4ED8"><a href="#u652F_u4ED8" class="headerlink" title="支付"></a>支付</h4><ul>
<li><a href="https://github.com/robotmedia/RMStore" target="_blank" rel="external">RMStore</a></li>
</ul>
</the>]]></content>
      
        
        <tags>
            
            <tag> iOS </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[多个git账号的配置]]></title>
      <url>/2017/01/23/%E5%A4%9A%E4%B8%AAgit%E8%B4%A6%E5%8F%B7%E7%9A%84%E9%85%8D%E7%BD%AE/</url>
      <content type="html"><![CDATA[<p><strong> 多个git账号的配置 ：</strong> <excerpt in="" index="" |="" 首页摘要\=""><br>多个git帐号的处理，我们有时候需要配置很多git的ssh，那我们要如何实现呢？<br><a id="more"></a></excerpt></p>
<the rest="" of="" contents="" |="" 余下全文\="">

<h1 id="u591A_u4E2Agit_u8D26_u53F7_u7684_u914D_u7F6E"><a href="#u591A_u4E2Agit_u8D26_u53F7_u7684_u914D_u7F6E" class="headerlink" title="多个git账号的配置"></a>多个git账号的配置</h1><h2 id="u6709_u65F6_u5019_u6211_u4EEC_u9700_u8981_u5728_u540C_u4E00_u53F0Mac_u7535_u8111_u4E0B_u4E0A_u4F7F_u7528_u591A_u4E2Agit_u8D26_u53F7_uFF0C_u4E3A_u4E86_u907F_u514D_u51B2_u7A81_uFF0C_u6211_u4EEC_u9700_u8981_u914D_u7F6E_7E/-ssh/config_u6587_u4EF6_uFF0C_u4F5C_u4E3A_u7A0B_u5E8F_u5458_u4F1A_u6709_u591A_u4E2A_u4EE3_u7801_u7BA1_u7406_u7684_u5E93_uFF0C_u73B0_u5728_u7528SVN_u6BD4_u8F83_u5C11_u4E86_uFF0CGit_u6210_u4E3A_u4E3B_u6D41_uFF0C_u4F46_u662F_u5728_u7535_u8111_u4E0B_u5982_u4F55_u540C_u65F6_u4FDD_u5B58_u591A_u4E2Assh_u8D26_u53F7_u5462_uFF0C_u81EA_u5DF1_u603B_u7ED3_u4E86_u4E00_u4E0B_u6B65_u9AA4_uFF1A"><a href="#u6709_u65F6_u5019_u6211_u4EEC_u9700_u8981_u5728_u540C_u4E00_u53F0Mac_u7535_u8111_u4E0B_u4E0A_u4F7F_u7528_u591A_u4E2Agit_u8D26_u53F7_uFF0C_u4E3A_u4E86_u907F_u514D_u51B2_u7A81_uFF0C_u6211_u4EEC_u9700_u8981_u914D_u7F6E_7E/-ssh/config_u6587_u4EF6_uFF0C_u4F5C_u4E3A_u7A0B_u5E8F_u5458_u4F1A_u6709_u591A_u4E2A_u4EE3_u7801_u7BA1_u7406_u7684_u5E93_uFF0C_u73B0_u5728_u7528SVN_u6BD4_u8F83_u5C11_u4E86_uFF0CGit_u6210_u4E3A_u4E3B_u6D41_uFF0C_u4F46_u662F_u5728_u7535_u8111_u4E0B_u5982_u4F55_u540C_u65F6_u4FDD_u5B58_u591A_u4E2Assh_u8D26_u53F7_u5462_uFF0C_u81EA_u5DF1_u603B_u7ED3_u4E86_u4E00_u4E0B_u6B65_u9AA4_uFF1A" class="headerlink" title="有时候我们需要在同一台Mac电脑下上使用多个git账号，为了避免冲突，我们需要配置~/.ssh/config文件，作为程序员会有多个代码管理的库，现在用SVN比较少了，Git成为主流，但是在电脑下如何同时保存多个ssh账号呢，自己总结了一下步骤："></a>有时候我们需要在同一台Mac电脑下上使用多个git账号，为了避免冲突，我们需要配置~/.ssh/config文件，作为程序员会有多个代码管理的库，现在用SVN比较少了，Git成为主流，但是在电脑下如何同时保存多个ssh账号呢，自己总结了一下步骤：</h2><p><em>注意：整个修改过程按照github的ssh-key为范例</em></p>
<h4 id="1_u3001_u7528ssh-keygen_u547D_u4EE4_u751F_u6210_u4E00_u7EC4_u65B0_u7684id_rsa_github_u548Cid_rsa_github-pub"><a href="#1_u3001_u7528ssh-keygen_u547D_u4EE4_u751F_u6210_u4E00_u7EC4_u65B0_u7684id_rsa_github_u548Cid_rsa_github-pub" class="headerlink" title="1、用ssh-keygen命令生成一组新的id_rsa_github和id_rsa_github.pub"></a>1、用ssh-keygen命令生成一组新的id_rsa_github和id_rsa_github.pub</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">cd ~/<span class="selector-class">.ssh</span></div><div class="line"></div><div class="line">ssh-keygen -t rsa -C <span class="string">"new email"</span></div></pre></td></tr></table></figure>
<p>当我们在终端输入完上面的命令，回车后会提示：<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Enter <span class="built_in">file</span> <span class="keyword">in</span> which <span class="built_in">to</span> save <span class="keyword">the</span> key (/Users/dabao/.ssh/id_rsa):</div></pre></td></tr></table></figure></p>
<p>现在就是生成一个新的pub，在<strong>:</strong> 后输入你想生成文件的新名字，例如github的：id_rsa_github,名字可以随便起，然后回车。<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Enter passphrase (<span class="built_in">empty</span> <span class="keyword">for</span> <span class="keyword">no</span> passphrase):</div></pre></td></tr></table></figure></p>
<p>我感觉整个秘密可以不用输入，我一般就是github的密码，按回车，确认密码，然后就生成了新的key.</p>
<p><em>这个时候会发现，在~/.ssh文件夹下会多出一个id_rsa_github和id_rsa_github.pub的文件</em></p>
<h4 id="2_u3001_u6253_u5F00config_u6587_u4EF6_uFF0C_u5982_u679C_u6CA1_u6709_u5C31_u751F_u6210_u4E00_u4E2A_21"><a href="#2_u3001_u6253_u5F00config_u6587_u4EF6_uFF0C_u5982_u679C_u6CA1_u6709_u5C31_u751F_u6210_u4E00_u4E2A_21" class="headerlink" title="2、打开config文件，如果没有就生成一个!"></a>2、打开config文件，如果没有就生成一个!</h4><blockquote>
<p>这里可以修改Host，Host只是一个标记而已，比如说我有两个github账号，这时候我就要生成不同的key，用Host起一个别名用来区分就好了</p>
</blockquote>
<figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">Host git-oschina</div><div class="line">    HostName git.oschina.net</div><div class="line">    <span class="keyword">User</span> <span class="title">xxx</span>(名字随便写)</div><div class="line">    PreferredAuthentications publickey</div><div class="line">    IdentityFile ~/.ssh/id_rsa_oschina</div><div class="line">Host git-github</div><div class="line">    HostName github.com</div><div class="line">    <span class="keyword">User</span> <span class="title">xxx</span>(名字随便写)</div><div class="line">    PreferredAuthentications publickey</div><div class="line">    IdentityFile ~/.ssh/id_rsa_github</div></pre></td></tr></table></figure>
<h4 id="3_u3001_u5C06SSH_Key_u6DFB_u52A0_u5230ssh-agent_uFF0C_u6267_u884C_u547D_u4EE4_uFF1A"><a href="#3_u3001_u5C06SSH_Key_u6DFB_u52A0_u5230ssh-agent_uFF0C_u6267_u884C_u547D_u4EE4_uFF1A" class="headerlink" title="3、将SSH Key添加到ssh-agent，执行命令："></a>3、将SSH Key添加到ssh-agent，执行命令：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">　　　<span class="built_in">eval</span> $(ssh-agent <span class="_">-s</span>)</div></pre></td></tr></table></figure>
<p>返回agent的Pid：</p>
<h4 id="4_u3001_u7136_u540E_u6211_u4EEC_u8981_u628Assh_u6DFB_u52A0_u5230git_u91CC_u9762"><a href="#4_u3001_u7136_u540E_u6211_u4EEC_u8981_u628Assh_u6DFB_u52A0_u5230git_u91CC_u9762" class="headerlink" title="4、然后我们要把ssh添加到git里面"></a>4、然后我们要把ssh添加到git里面</h4><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-<span class="keyword">add</span><span class="bash"> ~/.ssh/id_rsa_github</span></div></pre></td></tr></table></figure>
<h4 id="5_u3001_u7136_u540E_u6D4B_u8BD5_u4E00_u4E0B_u662F_u5426OK"><a href="#5_u3001_u7136_u540E_u6D4B_u8BD5_u4E00_u4E0B_u662F_u5426OK" class="headerlink" title="5、然后测试一下是否OK"></a>5、然后测试一下是否OK</h4><figure class="highlight ada"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ssh -T git@github.com</div><div class="line">Hi xxx! You<span class="symbol">'ve</span> successfully authenticated,but GitHub does <span class="keyword">not</span> provide shell <span class="keyword">access</span>.</div></pre></td></tr></table></figure>
<h4 id="6_u3001_u5B8C_u6210_u4E4B_u540E_u9700_u8981_u8BBE_u7F6Econfig"><a href="#6_u3001_u5B8C_u6210_u4E4B_u540E_u9700_u8981_u8BBE_u7F6Econfig" class="headerlink" title="6、完成之后需要设置config"></a>6、完成之后需要设置config</h4><blockquote>
<p>在自己git项目下，终端运行</p>
</blockquote>
<figure class="highlight ada"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git config <span class="comment">--list</span></div></pre></td></tr></table></figure>
<p>查看自己config配置，路径在<strong>~/.gitconfig</strong>里，可以用文本打开</p>
<blockquote>
<p>这个地方强调一下</p>
</blockquote>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git config --global user<span class="selector-class">.name</span> <span class="string">"xxx"</span></div><div class="line">git config --global user<span class="selector-class">.email</span> <span class="string">"xxx@qq.com"</span></div></pre></td></tr></table></figure>
<p>这个如果你想全局都是这个你可以选择<code>gloabal</code>，反正我的<strong>~/.gitconfig</strong>里面是我公司的配置，可一个人选择配置</p>
<blockquote>
<p>又或者在自己项目里进行单独配置</p>
</blockquote>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git config user<span class="selector-class">.name</span> <span class="string">"xxx"</span></div><div class="line">git config user<span class="selector-class">.email</span> <span class="string">"xxx@qq.com"</span></div></pre></td></tr></table></figure>
<p>这个设置会显示在你的提交信息里面，在自己项目的<strong>.git</strong>目录下，有个名为<strong>config</strong>的文件，如果找不到可以在终端输入<strong>l -list</strong></p>
<h4 id="7_u3001_u5982_u679C_u9047_u5230_u5982_u56FE_u4E0B_u9762_u8FD9_u79CD_u60C5_u51B5"><a href="#7_u3001_u5982_u679C_u9047_u5230_u5982_u56FE_u4E0B_u9762_u8FD9_u79CD_u60C5_u51B5" class="headerlink" title="7、如果遇到如图下面这种情况"></a>7、如果遇到如图下面这种情况</h4><ul>
<li>就把<code>known_hosts</code>里面相应的地址删掉，在执行<code>ssh -T</code>重新请求就好了<br><img src="/2017/01/23/多个git账号的配置/ssh_error.png" alt="ssh -T"></li>
</ul>
</the>]]></content>
      
        
        <tags>
            
            <tag> Git </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[新年新的开端]]></title>
      <url>/2017/01/22/%E6%96%B0%E5%B9%B4%E6%96%B0%E7%9A%84%E5%BC%80%E7%AB%AF/</url>
      <content type="html"><![CDATA[<p><strong> 新年新的开端 ：</strong> <excerpt in="" index="" |="" 首页摘要\=""><br>2017年开始了，新年新气象。加油！<br><a id="more"></a></excerpt></p>
<the rest="" of="" contents="" |="" 余下全文\="">


<h1 id="2016"><a href="#2016" class="headerlink" title="2016"></a>2016</h1><h2 id="u8FD9_u4E00_u5E74_uFF0C_u6CA1_u6709_u4EFB_u4F55_u5927_u7684_u63D0_u5347_uFF0C_u540E_u6765_u8F6C_u5C97_u65B0_u9879_u76EE_uFF0C_u6709_u4E86_u90E8_u5206_u591A_u4F59_u7684_u65F6_u95F4_uFF0C_u81EA_u5DF1_u5B66_u4E60_u7B97_u6CD5_uFF0C_u628A_u6700_u5E95_u5C42_u7684_u7B97_u6CD5_u8FC7_u4E00_u904D_uFF0C_u4E8C_u53C9_u6811_uFF0C_u6392_u5E8F_u8FD9_u4E9B_u8003_u7684_u6700_u591A_u7684_uFF1BRuby_u8BED_u8A00_u4E5F_u6309_u7167_u7CFB_u7EDF_u7684_u5B66_u4E60_u4E86_u4E00_u8FB9_uFF0C_u6700_u57FA_u672C_u7684_u8BED_u6CD5_uFF0C_u5B9E_u73B0_u4E00_u4E2A_u535A_u5BA2_u7684_uFF0C_u90FD_u53EF_u4EE5_u4E86_uFF0C_u4F46_u662F_u7531_u4E8E_u9879_u76EE_u540E_u671F_u5FD9_uFF0C_u57FA_u672C_u4E0A_u5C31_u653E_u4E0B_u4E86_u3002"><a href="#u8FD9_u4E00_u5E74_uFF0C_u6CA1_u6709_u4EFB_u4F55_u5927_u7684_u63D0_u5347_uFF0C_u540E_u6765_u8F6C_u5C97_u65B0_u9879_u76EE_uFF0C_u6709_u4E86_u90E8_u5206_u591A_u4F59_u7684_u65F6_u95F4_uFF0C_u81EA_u5DF1_u5B66_u4E60_u7B97_u6CD5_uFF0C_u628A_u6700_u5E95_u5C42_u7684_u7B97_u6CD5_u8FC7_u4E00_u904D_uFF0C_u4E8C_u53C9_u6811_uFF0C_u6392_u5E8F_u8FD9_u4E9B_u8003_u7684_u6700_u591A_u7684_uFF1BRuby_u8BED_u8A00_u4E5F_u6309_u7167_u7CFB_u7EDF_u7684_u5B66_u4E60_u4E86_u4E00_u8FB9_uFF0C_u6700_u57FA_u672C_u7684_u8BED_u6CD5_uFF0C_u5B9E_u73B0_u4E00_u4E2A_u535A_u5BA2_u7684_uFF0C_u90FD_u53EF_u4EE5_u4E86_uFF0C_u4F46_u662F_u7531_u4E8E_u9879_u76EE_u540E_u671F_u5FD9_uFF0C_u57FA_u672C_u4E0A_u5C31_u653E_u4E0B_u4E86_u3002" class="headerlink" title="这一年，没有任何大的提升，后来转岗新项目，有了部分多余的时间，自己学习算法，把最底层的算法过一遍，二叉树，排序这些考的最多的；Ruby语言也按照系统的学习了一边，最基本的语法，实现一个博客的，都可以了，但是由于项目后期忙，基本上就放下了。"></a>这一年，没有任何大的提升，后来转岗新项目，有了部分多余的时间，自己学习算法，把最底层的算法过一遍，二叉树，排序这些考的最多的；Ruby语言也按照系统的学习了一边，最基本的语法，实现一个博客的，都可以了，但是由于项目后期忙，基本上就放下了。</h2><h2 id="u8FD9_u4E00_u5E74_uFF0C_u4E66_u6CA1_u770B_u5B8C_u4E09_u672C_uFF0C_u4E24_u4E2A0-5_uFF0C_u4E0D_u7BA1_u6280_u672F_u7C7B_u578B_u8FD8_u662F_u5176_u4ED6_uFF0C_u57FA_u672C_u4E0A_u6CA1_u770B_u5B8C_uFF1B_u5BF9_u4E8E_u65B0_u8BED_u8A00ruby_uFF0C_u53EA_u80FD_u8BF4_u534A_u77E5_u534A_u89E3_uFF0C_u611F_u89C9_u8FD8_u5DEE_u597D_u591A_uFF0C_u51E0_u672C_u64AD_u5BA2_u662F_u53EF_u4EE5_u5B8C_u6210_uFF0C_u4F46_u662F_u5185_u90E8_u7ED3_u6784_u539F_u7406_uFF0C_u8FD8_u662F_u4E0D_u662F_u5F88_u6E05_u695A_uFF0C_u60F3_u7EE7_u7EED_u6DF1_u5165_uFF0C_u539F_u672C_u662F_u60F3_u7528ruby_u5199_u811A_u672C_u7684_uFF0C_u4F46_u662F_u601D_u8DEF_u548C_u601D_u60F3_u8FD8_u662F_u9762_u5411_u5BF9_u8C61_u7F16_u7A0B_uFF0C_u5BF9_u811A_u672C_u8BED_u8A00_u4E0D_u719F_u6089_u3001_u4E86_u89E3_u3002"><a href="#u8FD9_u4E00_u5E74_uFF0C_u4E66_u6CA1_u770B_u5B8C_u4E09_u672C_uFF0C_u4E24_u4E2A0-5_uFF0C_u4E0D_u7BA1_u6280_u672F_u7C7B_u578B_u8FD8_u662F_u5176_u4ED6_uFF0C_u57FA_u672C_u4E0A_u6CA1_u770B_u5B8C_uFF1B_u5BF9_u4E8E_u65B0_u8BED_u8A00ruby_uFF0C_u53EA_u80FD_u8BF4_u534A_u77E5_u534A_u89E3_uFF0C_u611F_u89C9_u8FD8_u5DEE_u597D_u591A_uFF0C_u51E0_u672C_u64AD_u5BA2_u662F_u53EF_u4EE5_u5B8C_u6210_uFF0C_u4F46_u662F_u5185_u90E8_u7ED3_u6784_u539F_u7406_uFF0C_u8FD8_u662F_u4E0D_u662F_u5F88_u6E05_u695A_uFF0C_u60F3_u7EE7_u7EED_u6DF1_u5165_uFF0C_u539F_u672C_u662F_u60F3_u7528ruby_u5199_u811A_u672C_u7684_uFF0C_u4F46_u662F_u601D_u8DEF_u548C_u601D_u60F3_u8FD8_u662F_u9762_u5411_u5BF9_u8C61_u7F16_u7A0B_uFF0C_u5BF9_u811A_u672C_u8BED_u8A00_u4E0D_u719F_u6089_u3001_u4E86_u89E3_u3002" class="headerlink" title="这一年，书没看完三本，两个0.5，不管技术类型还是其他，基本上没看完；对于新语言ruby，只能说半知半解，感觉还差好多，几本播客是可以完成，但是内部结构原理，还是不是很清楚，想继续深入，原本是想用ruby写脚本的，但是思路和思想还是面向对象编程，对脚本语言不熟悉、了解。"></a>这一年，书没看完三本，两个0.5，不管技术类型还是其他，基本上没看完；对于新语言ruby，只能说半知半解，感觉还差好多，几本播客是可以完成，但是内部结构原理，还是不是很清楚，想继续深入，原本是想用ruby写脚本的，但是思路和思想还是面向对象编程，对脚本语言不熟悉、了解。</h2><h2 id="u8FD9_u4E00_u5E74_uFF0C_u81EA_u5DF1_u7ED3_u4E86_u5A5A_uFF0C_u6709_u4E86_u5B9D_u5B9D_uFF0C_u6709_u4E86_u81EA_u5DF1_u5BB6_u5EAD_uFF0C_u81EA_u5DF1_u4E5F_u8D8A_u6709_u8D23_u4EFB_u611F_uFF01"><a href="#u8FD9_u4E00_u5E74_uFF0C_u81EA_u5DF1_u7ED3_u4E86_u5A5A_uFF0C_u6709_u4E86_u5B9D_u5B9D_uFF0C_u6709_u4E86_u81EA_u5DF1_u5BB6_u5EAD_uFF0C_u81EA_u5DF1_u4E5F_u8D8A_u6709_u8D23_u4EFB_u611F_uFF01" class="headerlink" title="这一年，自己结了婚，有了宝宝，有了自己家庭，自己也越有责任感！"></a>这一年，自己结了婚，有了宝宝，有了自己家庭，自己也越有责任感！</h2><h1 id="2017"><a href="#2017" class="headerlink" title="2017"></a>2017</h1><h2 id="u8FD9_u4E00_u5E74_uFF0C_u65B0_u7684_u4E00_u5E74_uFF0C_u76EE_u6807_u4E0D_u5927_u4E5F_u4E0D_u80FD_u5C0F_uFF0C_u8981_u5BF9_u81EA_u5DF1_u8D1F_u8D23_uFF0C_u5BF9_u5BB6_u5EAD_u8D1F_u8D23_uFF01"><a href="#u8FD9_u4E00_u5E74_uFF0C_u65B0_u7684_u4E00_u5E74_uFF0C_u76EE_u6807_u4E0D_u5927_u4E5F_u4E0D_u80FD_u5C0F_uFF0C_u8981_u5BF9_u81EA_u5DF1_u8D1F_u8D23_uFF0C_u5BF9_u5BB6_u5EAD_u8D1F_u8D23_uFF01" class="headerlink" title="这一年，新的一年，目标不大也不能小，要对自己负责，对家庭负责！"></a>这一年，新的一年，目标不大也不能小，要对自己负责，对家庭负责！</h2><ul>
<li>读书，这个还得继续，读万卷书行万里路，就这一个道理，一本书，既然开始读了，就持之以恒的读完！</li>
<li>新的专业知识，这个问题其实挺严峻的，随着开发的进行，各个新技术涌现，学的东西太多了，自己要抓住自己感兴趣的东西，去了解学习。</li>
</ul>
<h1 id="u672A_u6765"><a href="#u672A_u6765" class="headerlink" title="未来"></a>未来</h1><ul>
<li>新技术瞻望，新技术学习，持之以恒</li>
<li>对于iOS开发，Swift学习；对于其他语言Ruby持续深入</li>
</ul>
</the>]]></content>
      
        
        <tags>
            
            <tag> Sentiment </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[UITextView心得]]></title>
      <url>/2016/07/02/UITextView%E5%BF%83%E5%BE%97/</url>
      <content type="html"><![CDATA[<p><strong> UITextView心得 ：</strong> <excerpt in="" index="" |="" 首页摘要\=""><br>主要是关于UITextView一些测试和自己的一些见解，不喜勿喷哦！<br><a id="more"></a></excerpt></p>
<the rest="" of="" contents="" |="" 余下全文\="">

<h1 id="UITextView"><a href="#UITextView" class="headerlink" title="UITextView"></a>UITextView</h1><h3 id="u6700_u8FD1_u5F00_u53D1_u8F93_u5165_u6846_u8FD9_u4E2A_u9B3C_u4E1C_u897F_uFF0C_u8F93_u5165_u81EA_u52A8_u8C03_u6574_u9AD8_u5EA6_uFF0C_u7F51_u4E0A_u4E5F_u6709_u5404_u79CD_u6DFB_u52A0placeholder_u7684_uFF0C_u611F_u89C9_u90FD_u4E0D_u592A_u597D_u7528_uFF0C_u81EA_u5DF1_u7740_u624B_u53BB_u641E_u4E00_u4E0B_uFF0C_u6700_u8FD1_u5F88_u56F0_u6270_u6211_u4E00_u4E2A_u95EE_u9898_uFF0C_u7531_u4E8E_u8981_u6DFB_u52A0placeholder_u6709_u65F6_u5019_u548C_u5149_u6807_u5BF9_u4E0D_u9F50_uFF0C_u6700_u540E_u7528reveal_u67E5_u770B_u4E86_u4E00_u4E0B_uFF0C_u5982_u4E0B"><a href="#u6700_u8FD1_u5F00_u53D1_u8F93_u5165_u6846_u8FD9_u4E2A_u9B3C_u4E1C_u897F_uFF0C_u8F93_u5165_u81EA_u52A8_u8C03_u6574_u9AD8_u5EA6_uFF0C_u7F51_u4E0A_u4E5F_u6709_u5404_u79CD_u6DFB_u52A0placeholder_u7684_uFF0C_u611F_u89C9_u90FD_u4E0D_u592A_u597D_u7528_uFF0C_u81EA_u5DF1_u7740_u624B_u53BB_u641E_u4E00_u4E0B_uFF0C_u6700_u8FD1_u5F88_u56F0_u6270_u6211_u4E00_u4E2A_u95EE_u9898_uFF0C_u7531_u4E8E_u8981_u6DFB_u52A0placeholder_u6709_u65F6_u5019_u548C_u5149_u6807_u5BF9_u4E0D_u9F50_uFF0C_u6700_u540E_u7528reveal_u67E5_u770B_u4E86_u4E00_u4E0B_uFF0C_u5982_u4E0B" class="headerlink" title="最近开发输入框这个鬼东西，输入自动调整高度，网上也有各种添加placeholder的，感觉都不太好用，自己着手去搞一下，最近很困扰我一个问题，由于要添加placeholder有时候和光标对不齐，最后用reveal查看了一下，如下"></a>最近开发输入框这个鬼东西，输入自动调整高度，网上也有各种添加placeholder的，感觉都不太好用，自己着手去搞一下，最近很困扰我一个问题，由于要添加placeholder有时候和光标对不齐，最后用reveal查看了一下，如下</h3><figure class="highlight nix"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">// <span class="attr">font</span> = <span class="number">0</span>  <span class="attr">h</span> = <span class="number">16</span>  <span class="attr">selectionh</span> = <span class="number">1.5</span></div><div class="line">// <span class="attr">font</span> = <span class="number">0.5</span>  <span class="attr">h</span> = <span class="number">17</span>  <span class="attr">selectionh</span> = <span class="number">2.09668</span></div><div class="line">// <span class="attr">font</span> = <span class="number">1</span>  <span class="attr">h</span> = <span class="number">18</span>  <span class="attr">selectionh</span> = <span class="number">2.69336</span> // (<span class="attr">width</span> = <span class="number">6</span>, <span class="attr">height</span> = <span class="number">1.193359375</span>)</div><div class="line">// <span class="attr">font</span> = <span class="number">1.5</span>  <span class="attr">h</span> = <span class="number">18</span>  <span class="attr">selectionh</span> = <span class="number">3.29004</span></div><div class="line">// <span class="attr">font</span> = <span class="number">2</span>  <span class="attr">h</span> = <span class="number">19</span>  <span class="attr">selectionh</span> = <span class="number">3.88672</span>   <span class="number">2.386719</span></div><div class="line">// <span class="attr">font</span> = <span class="number">3</span>  <span class="attr">h</span> = <span class="number">20</span>  <span class="attr">selectionh</span> = <span class="number">5.08008</span></div><div class="line">// <span class="attr">font</span> = <span class="number">4</span>  <span class="attr">h</span> = <span class="number">21</span>  <span class="attr">selectionh</span> = <span class="number">6.27344</span></div><div class="line">// <span class="attr">font</span> = <span class="number">5</span>  <span class="attr">h</span> = <span class="number">22</span>  <span class="attr">selectionh</span> = <span class="number">7.4668</span></div><div class="line">// <span class="attr">font</span> = <span class="number">10</span>  <span class="attr">h</span> = <span class="number">28</span>  <span class="attr">selectionh</span> = <span class="number">13.4336</span>  <span class="attr">contentOffset</span> = &#123; <span class="number">0</span>, <span class="number">3</span> &#125; <span class="number">25</span></div><div class="line">// <span class="attr">font</span> = <span class="number">11</span>  <span class="attr">h</span> = <span class="number">30</span>  <span class="attr">selectionh</span> = <span class="number">14.627</span></div><div class="line">// <span class="attr">font</span> = <span class="number">100</span>  <span class="attr">h</span> = <span class="number">136</span>  <span class="attr">selectionh</span> = <span class="number">120.836</span>  <span class="attr">contentOffset</span> = &#123; <span class="number">0</span>, <span class="number">110.5</span> &#125;  <span class="number">25.5</span></div><div class="line">// <span class="attr">font</span> = <span class="number">1000</span>  <span class="attr">h</span> = <span class="number">1210</span>  <span class="attr">selectionh</span> = <span class="number">1194.86</span>  <span class="attr">contentOffset</span> = &#123; <span class="number">0</span>, <span class="number">1184.5</span> &#125; <span class="number">25.5</span></div><div class="line">// <span class="attr">font</span> = <span class="number">10000</span>  <span class="attr">h</span> = <span class="number">11950</span>  <span class="attr">selectionh</span> = <span class="number">11935.1</span>  <span class="attr">contentOffset</span> = &#123; <span class="number">0</span>, <span class="number">11924.5</span> &#125;  <span class="number">25.5</span></div><div class="line">// <span class="attr">font</span> = <span class="number">100000</span>  <span class="attr">h</span> = <span class="number">119352</span>  <span class="attr">selectionh</span> = <span class="number">119337</span>  <span class="attr">contentOffset</span> = &#123; <span class="number">0</span>, <span class="number">119327</span> &#125;  <span class="number">25.5</span></div></pre></td></tr></table></figure>
<p>  这是测试的一些font，就想知道到底textView是怎么计算contenSize的，一直从光标高度算起，最终没算出来，但是搞定了光标的高度  min：1.5，光标<strong>height=text.size.height+1.5</strong></p>
<p>  光标的<strong>point = {4, 7}</strong>, 这是一开始没有文字输入的时候，如果设置<strong>placeholderLabel</strong>的坐标可以通过point来确定</p>
<h2 id="u5B9E_u9645_u4E0AcontentSize_u7684_u9AD8_u5EA6_u662F_u8FD9_u6837_u6765_u7684"><a href="#u5B9E_u9645_u4E0AcontentSize_u7684_u9AD8_u5EA6_u662F_u8FD9_u6837_u6765_u7684" class="headerlink" title="实际上contentSize的高度是这样来的"></a>实际上contentSize的高度是这样来的</h2><p><strong>contentSizeHeight = round(text.size.height + 16)（四舍五入）</strong>这样能解释为什么当font=0时候，初始化高度为16了，其实和光标没有任何关系。</p>
</the>]]></content>
      
        
        <tags>
            
            <tag> iOS </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[幻想该怎样处理]]></title>
      <url>/2016/02/29/%E5%B9%BB%E6%83%B3%E8%AF%A5%E6%80%8E%E6%A0%B7%E5%A4%84%E7%90%86/</url>
      <content type="html"><![CDATA[<p><strong> 幻想该怎样处理 ：</strong> <excerpt in="" index="" |="" 首页摘要\=""><br>摘自一篇佛经，幻想人人都有，你呢???<br><a id="more"></a></excerpt></p>
<the rest="" of="" contents="" |="" 余下全文\="">

<h1 id="u6253_u5750_u65F6_u7ECF_u5E38_u770B_u5230_u201D_u5E7B_u60F3_u201D_u8BE5_u600E_u6837_u5904_u7406"><a href="#u6253_u5750_u65F6_u7ECF_u5E38_u770B_u5230_u201D_u5E7B_u60F3_u201D_u8BE5_u600E_u6837_u5904_u7406" class="headerlink" title="打坐时经常看到”幻想”该怎样处理"></a>打坐时经常看到”幻想”该怎样处理</h1><ul>
<li>抄一篇小文，感觉挺有深意。</li>
</ul>
<p>问：师父，我在打坐的时候经常会看到一些“幻像”，有时候会很害怕，不知道该怎么处理，希望师父给指点迷津，阿弥陀佛。</p>
<p>慧广法师：唯一的方法就是不执着。要知道，我们亲身经历的一切，都会慢慢地消失，慢慢被遗忘。何况是静坐中出现的幻觉？世界就是这样，你抓不住任何东西，所以，不要执著它。</p>
<p>大家想一想，你们此刻觉得我说的话真好，有些人会感动，有些人会出现一种感悟，但这些东西明天还在不在，后天还在不在，说不清。什么意思呢？任何情绪，任何心情，任何经历，都会很快过去，不要跟着它，不要执著它，不要想抓住它。痛苦、幸福、仇恨都一样，只有傻瓜才想抓住它，智者知道它只是水里的月亮。</p>
<p>什么是智者？就是明白我讲的这个真理，并且照着去做的人。</p>
<p>什么是愚者？就是不明白这个道理，总被一些事情和情绪所控的人。比如说，三天前女朋友说了一句话，你到现在都气得要死；五天前朋友说了一句话，你到现在也气得要死；一年前某人说了一句话，你到今天还气得要死。结果你就气死了，气不死也气病了。那么，你就是愚者。被一些失去的东西压得喘不过气的时候，你也是愚者。明白一切都会过去，抓紧时间做事，喝茶的喝茶，演讲的演讲，聊天的聊天，吃饭的吃饭，做而无做，无做而做，就是智者。</p>
<p>愚智之间，只有一线之差，执著就是愚，放下就是智。就这么简单，不要老是被过去的，或者不可能抓住的东西，把你的生命捆死，你要是真把它当成“幻像”的话，就不会有疑惑了。</p>
<p>本文来源：网易佛学 作者：中国佛经网</p>
</the>]]></content>
      
        
        <tags>
            
            <tag> Sentiment </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[2016年计划]]></title>
      <url>/2016/02/19/2016%E5%B9%B4%E8%AE%A1%E5%88%92/</url>
      <content type="html"><![CDATA[<p><strong> 2016年计划 ：</strong> <excerpt in="" index="" |="" 首页摘要\=""><br>2016年开始了，新年新气象。加油！<br><a id="more"></a></excerpt></p>
<the rest="" of="" contents="" |="" 余下全文\="">

<h2 id="u65B0_u5E74_u65B0_u6C14_u8C61"><a href="#u65B0_u5E74_u65B0_u6C14_u8C61" class="headerlink" title="新年新气象"></a>新年新气象</h2><ul>
<li><p>自己规划<br>总结2015年这一年，感觉浑浑噩噩，本来想多学一门语言，但后来还是没有进行到，那个谁说过，完事开头难<br>我感觉能把一件事坚持下来更难，三分钟热度这事长有，贵在坚持，现在看来坚持一件事得多难。</p>
</li>
<li><p>新的征程开始了，除了想给自己买个kindle，但是还在由于，买kindle干嘛，说对了,<br>第一件事就是看书，每月必须看一本书。规定一年12个月每月一本。每本都要写总结。</p>
</li>
<li><p>除了看书，还要把想学的语音过一遍，比如ruby and rails写一个我的首页</p>
</li>
<li><p>其实吧任务还是挺重的嗯。。。。。。。。</p>
</li>
</ul>
<h2 id="u65B0_u7684_u5F81_u7A0B"><a href="#u65B0_u7684_u5F81_u7A0B" class="headerlink" title="新的征程"></a>新的征程</h2><ul>
<li>刚开始读完了吴军的浪潮之巅第二版，整本书分为两版，第一版主要介绍各个美国公司的兴衰史；<br>第二版主要介绍的变革，主要以互联网公司Google、Facebook等，以及一些风投公司的兴衰，公司上市等。</li>
</ul>
<h3 id="u8BFB_u540E_u611F_uFF1A"><a href="#u8BFB_u540E_u611F_uFF1A" class="headerlink" title="读后感："></a>读后感：</h3><ul>
<li>每家成功的公司，都有着自己独立的位置，</li>
<li>Google杀鸡焉用牛刀，如果毕业生能完成的，研究生也能完成，那就用研究生，也就是说研究生肯定比毕业生做的好；</li>
<li>一直像前看，不在旁边的风景，只要赶超对手一大截就是胜利，Google和微软</li>
<li>科技公司和互联网公司。</li>
</ul>
</the>]]></content>
      
        
        <tags>
            
            <tag> Sentiment </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hexo配置]]></title>
      <url>/2016/02/04/Hexo%E9%85%8D%E7%BD%AE/</url>
      <content type="html"><![CDATA[<p><strong> Hexo配置 ：</strong> <excerpt in="" index="" |="" 首页摘要\=""><br>关于Hexo的一些配置，这是初来乍到的开始。<br><a id="more"></a></excerpt></p>
<the rest="" of="" contents="" |="" 余下全文\="">

<h1 id="Hexo_u914D_u7F6EGitHub_u535A_u5BA2"><a href="#Hexo_u914D_u7F6EGitHub_u535A_u5BA2" class="headerlink" title="Hexo配置GitHub博客"></a>Hexo配置GitHub博客</h1><ul>
<li><p>好久都想搞一下博客这个东西，每次都弄了好长时间又放弃了，感觉对于写前端的我，真是麻烦，最近快过年了，最后一个版本也上线了，闲了一段时间，想起来Github上的博客还闲置着，终于有时间搞搞了。</p>
</li>
<li><p>网上已经有很多对于hexo的配置安装，我这里只是写我自己安装步骤和遇到的问题。</p>
</li>
</ul>
<h1 id="u5F00_u59CB_u90E8_u7F72"><a href="#u5F00_u59CB_u90E8_u7F72" class="headerlink" title="开始部署"></a>开始部署</h1><h2 id="u9996_u5148_u5728Github_u4E0A_u6709hexo_u7684_u6E90_u4EE3_u7801__u8FD9_u91CC_u662F_u8FDE_u63A5hexo"><a href="#u9996_u5148_u5728Github_u4E0A_u6709hexo_u7684_u6E90_u4EE3_u7801__u8FD9_u91CC_u662F_u8FDE_u63A5hexo" class="headerlink" title="首先在Github上有hexo的源代码 这里是连接hexo"></a>首先在Github上有hexo的源代码 这里是连接<a href="https://github.com/hexojs/hexo" target="_blank" rel="external">hexo</a></h2><ul>
<li><p>安装hexo</p>
<figure class="highlight avrasm"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-<span class="keyword">cli</span> -g</div></pre></td></tr></table></figure>
</li>
<li><p>通过终端cd 进入到自己的博客文件夹</p>
<figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">hexo init</span></div></pre></td></tr></table></figure>
</li>
</ul>
<p>会有如下文件在你的博客目录<br>[~  tree -L 1 demo<br>demo<br>├── _config.yml<br>├── package.json<br>├── scaffolds<br>├── source<br>└── themes</p>
<p>3 directories, 2 files]</p>
<blockquote>
<p>这样一个简单的博客初始化就完成了。不过还不能运行，下来我让它跑起来。</p>
</blockquote>
<h1 id="u672C_u5730_u8FD0_u884C"><a href="#u672C_u5730_u8FD0_u884C" class="headerlink" title="本地运行"></a>本地运行</h1><ul>
<li>现在用<code>hexo generate</code>生成静态文件，然后用<code>hexo server</code>运行本地服务器，打开浏览器输入<a href="http://0.0.0.0:4000/" target="_blank" rel="external">http://0.0.0.0:4000/</a>查看效果。如果发现有问题，在md文件改了之后，刷新页面就可以看到更改的效果了</li>
</ul>
<h1 id="u914D_u7F6E"><a href="#u914D_u7F6E" class="headerlink" title="配置"></a>配置</h1><ul>
<li>接下来我们要让代码运行到github上</li>
</ul>
<h2 id="config-yml_u6587_u4EF6_u914D_u7F6E"><a href="#config-yml_u6587_u4EF6_u914D_u7F6E" class="headerlink" title="_config.yml文件配置"></a>_config.yml文件配置</h2><ul>
<li>主要是这一部分的设置，会影响到你在网页上的展示，<code>如果你出现404页面</code>，就是因为这里没有设置你自己的博客代码地址<figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">deploy:</span></div><div class="line"><span class="symbol">  type:</span> git  <span class="meta">#最新版3.X把这个github缩写成git了，记得空格.</span></div><div class="line"><span class="symbol">  repository:</span> <span class="string">"https://github.com/tiandabao/tiandabao.github.io.git"</span></div><div class="line"><span class="symbol">  branch:</span> master</div></pre></td></tr></table></figure>
</li>
</ul>
<p>然后提交到github上就行了</p>
<h2 id="u5176_u5B9E_u5728_u8FD9_u4E2A_u8FC7_u7A0B_u4E2D_u6709_u597D_u591A_u5751_uFF0C_u8FD9_u91CC_u662F_u6211_u9047_u5230_u7684_u548C_u89E3_u51B3_u529E_u6CD5"><a href="#u5176_u5B9E_u5728_u8FD9_u4E2A_u8FC7_u7A0B_u4E2D_u6709_u597D_u591A_u5751_uFF0C_u8FD9_u91CC_u662F_u6211_u9047_u5230_u7684_u548C_u89E3_u51B3_u529E_u6CD5" class="headerlink" title="其实在这个过程中有好多坑，这里是我遇到的和解决办法"></a>其实在这个过程中有好多坑，这里是我遇到的和解决办法</h2><ul>
<li>在运行<code>hexo generate</code>时候会出现如下代码</li>
</ul>
<figure class="highlight arduino"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&#123; [Error: Cannot <span class="built_in">find</span> <span class="keyword">module</span> <span class="string">'./build/Release/DTraceProviderBindings'</span>] code: <span class="string">'MODULE_NOT_FOUND'</span> &#125;</div><div class="line">&#123; [Error: Cannot <span class="built_in">find</span> <span class="keyword">module</span> <span class="string">'./build/default/DTraceProviderBindings'</span>] code: <span class="string">'MODULE_NOT_FOUND'</span> &#125;</div><div class="line">&#123; [Error: Cannot <span class="built_in">find</span> <span class="keyword">module</span> <span class="string">'./build/Debug/DTraceProviderBindings'</span>] code: <span class="string">'MODULE_NOT_FOUND'</span> &#125;</div></pre></td></tr></table></figure>
<p>解决办法。<br><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">npm</span> install hexo --<span class="literal">no</span>-optional</div></pre></td></tr></table></figure></p>
<blockquote>
<p>注意 这个地方运行上面的代码是要在自己博客的目录下，不然不能生效。</p>
</blockquote>
<ul>
<li>在运行<code>hexo deploy</code>时候有时候会提示如下<figure class="highlight subunit"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">ERROR </span>Deployer not found : git</div></pre></td></tr></table></figure>
</li>
</ul>
<p>解决方法<br>在自己博客目录下运行<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm <span class="keyword">install</span> hexo-deployer-git <span class="comment">--save</span></div></pre></td></tr></table></figure></p>
<ul>
<li>在提交github的时候会出现类似于这样的代码<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">modified:   <span class="selector-class">.DS_Store</span></div><div class="line">modified:   <span class="selector-class">.deploy_git</span> (modified <span class="attribute">content</span>, untracked content)</div><div class="line">modified:   themes/yilia (modified <span class="attribute">content</span>, untracked content)</div></pre></td></tr></table></figure>
</li>
</ul>
<p>这部分不用管，主题是从远端clone的， 主题设置可以看这篇博客<a href="http://litten.github.io/2014/08/31/hexo-theme-yilia/" target="_blank" rel="external">yilia</a><br><code>在设置主题的时候，有个头像问题，一直没解决，就是图片的地址，处理方法：我把图片放到public/images/avatar.jpg下，提交到github后我可以找到我图片的地址“https://github.com/tiandabao/tiandabao.github.io/blob/master/images/avatar.jpg“但是在主题里我设置了这个url显示不出来，后来我发现，在你要显示的图片网页上右键，复制图片网址，“https://github.com/tiandabao/tiandabao.github.io/blob/master/images/avatar.jpg?raw=true”这时图片的地址后面多了个?raw=true，这时候把这个地址赋值给你主题头像字段</code></p>
<figure class="highlight subunit"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">error: </span>Your local changes to the following files would be overwritten by merge:</div><div class="line">	.DS_Store</div><div class="line">Please, commit your changes or stash them before you can merge.</div><div class="line">Aborting</div></pre></td></tr></table></figure>
<p>出现上面的问题，处理步骤删除本地.DS_Store，在进行pull或者push，由于.DS_Store文件存储有冲突，删掉会重新生成一分</p>
<p><strong>每次提交到github前记得hexo g 和 hexo d， 不然也页面显示不出来</strong></p>
<blockquote>
<p>友情参考<br><a href="https://segmentfault.com/a/1190000002398039" target="_blank" rel="external">https://segmentfault.com/a/1190000002398039</a><br><a href="http://litten.github.io/2014/08/31/hexo-theme-yilia/" target="_blank" rel="external">http://litten.github.io/2014/08/31/hexo-theme-yilia/</a><br><a href="http://www.jianshu.com/p/b7886271e21a" target="_blank" rel="external">http://www.jianshu.com/p/b7886271e21a</a></p>
</blockquote>
</the>]]></content>
      
        
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[我的第一篇博客]]></title>
      <url>/2016/02/03/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
      <content type="html"><![CDATA[<h1 id="u521D_u6765_u4E4D_u5230"><a href="#u521D_u6765_u4E4D_u5230" class="headerlink" title="初来乍到"></a>初来乍到</h1>]]></content>
      
        
    </entry>
    
  
  
</search>
